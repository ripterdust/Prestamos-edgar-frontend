{"version":3,"sources":["assets/logoBlanco.jpg","hooks/useContextUser.js","helpers/notify.js","api/axios.js","helpers/validacion.helper.js","components/seguridad/Login.js","components/seguridad/Registro.js","components/common/Error.js","components/common/Nav.js","helpers/objectoToArray.js","hooks/useFetch.js","helpers/monitor.helper.js","helpers/format.helper.js","components/mantenimientos/caja/Caja.js","helpers/getOptions.js","components/common/base/BrTable.js","components/mantenimientos/logs/TablaLogs.js","components/common/general/AdvertenciaCambio.js","helpers/extract.js","components/mantenimientos/prestamos/NuevoPrestamo.js","components/common/base/BrTableMostrar.js","components/mantenimientos/usuarios/Usuarios.js","router/rutas.js","components/mantenimientos/clientes/Clientes.js","components/mantenimientos/opcionesMenu/OpcionesMenu.js","components/mantenimientos/roles/Roles.js","hooks/useFetchConfig.js","components/mantenimientos/prestamos/Prestamos.js","components/mantenimientos/monedas/Monedas.js","components/mantenimientos/logs/Logs.js","components/common/base/InstalarPWA.js","components/common/Aside.js","components/common/Footer.js","misc/chars.js","components/common/base/BrGraficaComparativa.js","components/common/base/BrTarjetaAmarilla.js","components/common/base/BrTarjetaAzul.js","components/common/base/BrTarjetaRoja.js","components/common/base/BrTarjetaTablas.js","components/common/base/BrTarjetaVerde.js","components/mantenimientos/Dashboard.js","components/mantenimientos/cuotas/TablaCuotas.js","components/mantenimientos/cuotas/Cuotas.js","router/MainRouter.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TokenContext","createContext","notify","msg","arguments","length","undefined","type","toast","error","success","api","axios","create","baseURL","interceptors","response","use","_ref","status","data","message","validarEmail","email","test","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Login","_useState","useState","pass","setUser","slicedToArray","setContext","useContext","handleForm","_ref2","asyncToGenerator","_callee","e","target","elements","_elements","correo","password","_yield$api$post","_context","preventDefault","post","token","localStorage","setItem","_x","apply","react_default","a","createElement","className","action","onSubmit","id","placeholder","onChange","user","objectSpread","autoComplete","dist","to","Registro_regeneratorRuntime","Registro","_useState2","form","setForm","validate_password","nombre","handleInput","react_toastify_esm","Nav","data-widget","href","role","data-toggle","onClick","removeItem","objetoToArray","llave","map","el","toLowerCase","useFetch","url","_useContext","setState","_useState3","_useState4","change","setChange","useEffect","get","headers","Authorization","res","getUsrLang","navigator","language","userLanguage","formatDate","date","Date","toLocaleDateString","year","day","month","formatMoney","quantity","currency","Intl","NumberFormat","style","format","Caja_regeneratorRuntime","Caja","_useFetch","_useFetch3","config","selected","setSelected","activeBar","setActiveBar","_useState5","_useState6","money","setMoney","_useState7","_useState8","listaClientes","caja","config_id","moneda","toggleSearchBar","clickOption","_target$children","children","radio","label","concat","innerHTML","handleMoneyForm","Fragment","_ref3","cliente_id","htmlFor","getOptions","selector","options","opt","BrTable_regeneratorRuntime","BrTable","_ref$columns","columns","_ref$data","_ref$opcionales","opcionales","_ref$endpoint","endpoint","_ref$identificador","identificador","_ref$setFetch","setFetch","editD","setEditD","add","setAdd","edit","setEdit","setId","refrescarTabla","handleDelete","delete","_x2","handleAdd","handleEdit","editar","_callee2","_yield$api$get","_context2","_x3","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","formData","FormData","dataArray","toConsumableArray","fromEntries","_ref4","Header","accessor","hide","required","_ref5","_ref6","defaultValue","_ref7","assign","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","index","columna","allCells","opciones","foranea","valor","find","react","original","getCellProps","TablaLogs","log","tipo","log_id","fecha_creacion","cantidad","AdvertenciaCambio","_ref$titulo","titulo","_ref$mensaje","mensaje","extraerTotalRegistros","totalRegistros","obtenerFormulario","NuevoPrestamo_regeneratorRuntime","BrTableMostrar","Usuarios","_useFetch2","setResponse","roles","BrTable_BrTable","categorias","rutas","categoria","Componente","icono","AdvertenciaCambio_AdvertenciaCambio","navigate","useNavigate","formulario","monedas","clientes","nit","moneda_id","prefix","min","BrTableMostrar_BrTableMostrar","logs","TablaLogs_TablaLogs","InstalarPWA","soportaPWA","setSoportaPWA","instalacion","setInstalacion","manejador","window","addEventListener","removeEventListener","evt","prompt","Aside","listaOpciones","rutasPersonas","filter","includes","rutasConfiguracion","rutasPrestamos","toLocaleLowerCase","rutasGestion","src","logo","alt","opacity","data-accordion","InstalarPWA_InstalarPWA","_ref8","Footer","barCharConfig","responsive","plugins","legend","position","title","display","text","BrGraficaComparativa","_ref$total","total","_ref$tituloTotal","tituloTotal","_ref$indicadores","indicadores","primero","texto","segundo","_ref$configProp","configProp","_ref$labels","labels","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","datasets","faker","datatype","number","max","backgroundColor","react_chartjs_2_dist","joptions","BrTarjetaAmarilla","_ref$icono","_ref$texto","_ref$numero","numero","BrTarjetaAzul","BrTarjetaRoja","BrTarjetaTablas","_ref$columnas","columnas","_ref$rows","elemento","BrTarjetaVerde","Dashboard","totalUsuarios","totalClientes","_useFetch5","ultimosPrestamos","conteos","usuarios","filasTablaPrestamos","prestamo","cliente","cuotas","prestamista","BrTarjetaAzul_BrTarjetaAzul","BrTarjetaAmarilla_BrTarjetaAmarilla","BrTarjetaRoja_BrTarjetaRoja","BrTarjetaVerde_BrTarjetaVerde","BrTarjetaTablas_BrTarjetaTablas","BrGraficaComparativa_BrGraficaComparativa","TablaCuotas","_celda$column","booleano","fecha","fecha_pago","ExcelFile","ExportExcel","ExcelSheet","ExcelColumn","Cuotas","useParams","element","filename","TablaCuotas_TablaCuotas","MainRouter","rutasAccesibles","Nav_Nav","Aside_Aside","react_router_dist","exact","path","Dashboard_Dashboard","Caja_Caja","Login_Login","Registro_Registro","Cuotas_Cuotas","replace","Footer_Footer","Error_Error","App","Provider","MainRouter_MainRouter","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","root","ReactDOM","createRoot","document","getElementById","StrictMode","App_App","URL","process","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,ueCE3BC,EAAeC,mFCDfC,EAAS,WAAkD,IAAjDC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,uBAAwBG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAC3C,UAATG,EACAC,IAAMC,MAAMN,GACI,YAATI,GACPC,IAAME,QAAQP,ICFTQ,EAAMC,IAAMC,OAAO,CAE5BC,QAAS,iDAGbH,EAAII,aAAaC,SAASC,SAAIX,EAAW,SAAAY,GAAkB,IAAfF,EAAQE,EAARF,SACpCP,EAAQ,mCAEZ,IAAKO,EAED,OADAd,EAAOO,GACA,CACHU,OAAQ,IACRC,KAAM,IAEb,IACOA,EAAiBJ,EAAjBI,KAAMD,EAAWH,EAAXG,OAId,OAHIH,IAAUP,EAAQW,EAAKC,SAE3BnB,EAAOO,GACA,CAAEU,SAAQC,KAAMA,EAAKC,WCtBzB,IAAMC,EAAe,SAACC,GAIzB,MAFc,gDAEDC,KAAKD,iBCHtBE,EAAA,kBAAA5B,GAAA,IAAAA,EAAA,GAAA6B,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAAd,OAAAyC,EAAA1B,WAAA6B,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,EAAA,SAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvD,KAAA,SAAAuD,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAd,GAAA,OAAAzC,KAAA,QAAAuD,IAAAd,IAAAnD,EAAAoD,OAAA,IAAAe,EAAA,YAAAT,KAAA,SAAAU,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,EAAA,kBAAA8B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA2B,EAAA3B,UAAAD,OAAAd,OAAAsD,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAjC,MAAA,SAAAyC,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAJ,EAAAoB,GAAApB,EAAAM,GAAA,aAAAuB,EAAA9E,KAAA,KAAA+E,EAAAD,EAAAvB,IAAA3B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAkC,KAAA5B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAA7E,GAAA,OAAA2E,EAAA,QAAA3E,EAAAyE,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAT,EAAAE,EAAAK,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAV,EAAAE,EAAAK,GAAA,cAAA4B,EAAA9E,KAAA,IAAAmF,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA7B,MAAAkD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAA9E,OAAAmF,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAmB,EAAAiB,EAAAtD,SAAAkB,EAAAmB,QAAA,QAAAtE,IAAAsE,EAAA,IAAAnB,EAAAoC,SAAA,eAAApC,EAAAmB,OAAA,IAAAiB,EAAAtD,SAAA8D,SAAA5C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxD,EAAAyF,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,QAAA,OAAAZ,EAAAP,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAtD,SAAAkB,EAAAK,KAAA,aAAAuB,EAAA9E,KAAA,OAAAkD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAAlB,EAAAvB,IAAA,OAAAyC,IAAAH,MAAA3C,EAAAoC,EAAAW,YAAAD,EAAApE,MAAAsB,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,GAAAmD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAA9E,KAAA,gBAAA8E,EAAAvB,IAAA+C,EAAAQ,WAAAhC,EAAA,SAAA3B,EAAAL,GAAAe,KAAA8C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAsB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAlH,QAAA,KAAAqH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAlH,QAAA,GAAAwB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAtE,WAAA7B,EAAAmG,EAAAL,MAAA,EAAAK,GAAA,OAAAA,UAAA,OAAAA,KAAAb,GAAA,SAAAA,IAAA,OAAAzD,WAAA7B,EAAA8F,MAAA,UAAAnC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAAtC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAA7C,EAAA+H,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAnI,EAAAoI,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAAjG,UAAAD,OAAAd,OAAA4D,GAAAoD,GAAAhI,EAAAuI,MAAA,SAAAtE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA4B,OAAAvE,EAAAiF,gBAAAjF,EAAAwI,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAlF,EAAA+H,oBAAAzE,GAAAoF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA9B,UAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,EAAA,kBAAA8B,OAAAxB,EAAA6B,EAAA,mDAAA5E,EAAA2I,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAnI,QAAA,KAAA4B,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAtE,MAAAF,EAAAwE,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAL,MAAA,EAAAK,IAAA5G,EAAA2E,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA4B,KAAA5B,KAAA6B,WAAA3F,EAAA8D,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAxD,EAAA8D,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAlH,EAAAkC,KAAAK,KAAA4D,KAAAP,OAAAO,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1H,IAAA2I,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAA3I,KAAA,MAAA2I,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAA9E,KAAA,QAAA8E,EAAAvB,IAAAsF,EAAA3F,EAAAgD,KAAA6C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,KAAAiJ,EAAA,QAAA7B,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAArC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA8C,EAAA,YAAA4C,EAAA5H,EAAAkC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAb,OAAA,SAAA5F,EAAAuD,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAA0E,MAAAjH,EAAAkC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAnJ,GAAA,aAAAA,IAAAmJ,EAAA5C,QAAAhD,MAAA4F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAA9E,OAAA8E,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAA9E,KAAA,MAAA8E,EAAAvB,IAAA,gBAAAuB,EAAA9E,MAAA,aAAA8E,EAAA9E,KAAA6D,KAAAqC,KAAApB,EAAAvB,IAAA,WAAAuB,EAAA9E,MAAA6D,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAA9E,MAAA0G,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAU,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAA9E,KAAA,KAAAuJ,EAAAzE,EAAAvB,IAAAsD,EAAAP,GAAA,OAAAiD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAyB,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAN,SAAAxD,GAAA0D,IAAAnE,EAKO,IAAMmK,EAAQ,WAAM,IAAAC,EACHC,mBAAS,CAAE3I,OAAO,EAAM4I,MAAM,IAAzCC,EAAgDzI,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAAzC,GACRK,EAAeC,qBAAWvK,GAA1BsK,WASFE,EAAU,eAAAC,EAAA9I,OAAA+I,EAAA,EAAA/I,CAAAF,IAAAwG,KAAG,SAAA0C,EAAOC,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9J,EAAA,OAAAK,IAAAwB,KAAA,SAAAkI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,OAIA,OAHvBmE,EAAEQ,iBACMP,EAAWD,EAAXC,OACAC,EAAaD,EAAbC,SAAQC,EAAApJ,OAAA0I,EAAA,EAAA1I,CACWmJ,EAAQ,GAA5BE,EAAMD,EAAA,GAAEE,EAAQF,EAAA,GAAAI,EAAA1E,KAAA,EACA9F,EAAI0K,KAAK,sBAAuB,CACnDL,OAAQA,EAAO7I,MACf8I,SAAUA,EAAS9I,QACrB,OAAA+I,EAAAC,EAAAnF,MAHM5E,EAAI8J,EAAJ9J,MAKCkK,QACLC,aAAaC,QAAQ,QAASpK,EAAKkK,OACnChB,EAAWlJ,EAAKkK,QACnB,wBAAAH,EAAAlC,SAAA0B,MACJ,gBAdec,GAAA,OAAAhB,EAAAiB,MAAAtH,KAAAhE,YAAA,GAehB,OACIuL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAe,mCAC5BH,EAAAC,EAAAC,cAAA,QAAME,OAAO,GAAGC,SAAUxB,GACtBmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SACItL,KAAK,QACLyH,KAAK,SACLiE,GAAG,SACHC,YAAY,wBACZC,SArCT,SAAHjL,GAAmB,IAAb2J,EAAM3J,EAAN2J,OAClBT,EAAQ,SAACgC,GAAI,OAAAzK,OAAA0K,EAAA,EAAA1K,CAAA,GACNyK,EAAI,CACPpB,OAAQ1J,EAAauJ,EAAO1I,YAmCRmK,aAAa,MACbR,UAAU,iBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAI5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,WAAWyH,KAAK,WAAWiE,GAAG,OAAOC,YAAY,gBAAaJ,UAAU,eAAeQ,aAAa,QAChHX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAI5BH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,SAAS4B,MAAM,oBAAiB2J,UAAU,2BAE1DH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACC,GAAG,WAAWV,UAAU,IAAE,sDCnEpDW,EAAA,kBAAA5M,GAAA,IAAAA,EAAA,GAAA6B,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAAd,OAAAyC,EAAA1B,WAAA6B,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,EAAA,SAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvD,KAAA,SAAAuD,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAd,GAAA,OAAAzC,KAAA,QAAAuD,IAAAd,IAAAnD,EAAAoD,OAAA,IAAAe,EAAA,YAAAT,KAAA,SAAAU,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,EAAA,kBAAA8B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA2B,EAAA3B,UAAAD,OAAAd,OAAAsD,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAjC,MAAA,SAAAyC,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAJ,EAAAoB,GAAApB,EAAAM,GAAA,aAAAuB,EAAA9E,KAAA,KAAA+E,EAAAD,EAAAvB,IAAA3B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAkC,KAAA5B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAA7E,GAAA,OAAA2E,EAAA,QAAA3E,EAAAyE,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAT,EAAAE,EAAAK,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAV,EAAAE,EAAAK,GAAA,cAAA4B,EAAA9E,KAAA,IAAAmF,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA7B,MAAAkD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAA9E,OAAAmF,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAmB,EAAAiB,EAAAtD,SAAAkB,EAAAmB,QAAA,QAAAtE,IAAAsE,EAAA,IAAAnB,EAAAoC,SAAA,eAAApC,EAAAmB,OAAA,IAAAiB,EAAAtD,SAAA8D,SAAA5C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxD,EAAAyF,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,QAAA,OAAAZ,EAAAP,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAtD,SAAAkB,EAAAK,KAAA,aAAAuB,EAAA9E,KAAA,OAAAkD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAAlB,EAAAvB,IAAA,OAAAyC,IAAAH,MAAA3C,EAAAoC,EAAAW,YAAAD,EAAApE,MAAAsB,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,GAAAmD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAA9E,KAAA,gBAAA8E,EAAAvB,IAAA+C,EAAAQ,WAAAhC,EAAA,SAAA3B,EAAAL,GAAAe,KAAA8C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAsB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAlH,QAAA,KAAAqH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAlH,QAAA,GAAAwB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAtE,WAAA7B,EAAAmG,EAAAL,MAAA,EAAAK,GAAA,OAAAA,UAAA,OAAAA,KAAAb,GAAA,SAAAA,IAAA,OAAAzD,WAAA7B,EAAA8F,MAAA,UAAAnC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAAtC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAA7C,EAAA+H,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAnI,EAAAoI,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAAjG,UAAAD,OAAAd,OAAA4D,GAAAoD,GAAAhI,EAAAuI,MAAA,SAAAtE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA4B,OAAAvE,EAAAiF,gBAAAjF,EAAAwI,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAlF,EAAA+H,oBAAAzE,GAAAoF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA9B,UAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,EAAA,kBAAA8B,OAAAxB,EAAA6B,EAAA,mDAAA5E,EAAA2I,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAnI,QAAA,KAAA4B,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAtE,MAAAF,EAAAwE,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAL,MAAA,EAAAK,IAAA5G,EAAA2E,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA4B,KAAA5B,KAAA6B,WAAA3F,EAAA8D,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAxD,EAAA8D,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAlH,EAAAkC,KAAAK,KAAA4D,KAAAP,OAAAO,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1H,IAAA2I,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAA3I,KAAA,MAAA2I,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAA9E,KAAA,QAAA8E,EAAAvB,IAAAsF,EAAA3F,EAAAgD,KAAA6C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,KAAAiJ,EAAA,QAAA7B,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAArC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA8C,EAAA,YAAA4C,EAAA5H,EAAAkC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAb,OAAA,SAAA5F,EAAAuD,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAA0E,MAAAjH,EAAAkC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAnJ,GAAA,aAAAA,IAAAmJ,EAAA5C,QAAAhD,MAAA4F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAA9E,OAAA8E,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAA9E,KAAA,MAAA8E,EAAAvB,IAAA,gBAAAuB,EAAA9E,MAAA,aAAA8E,EAAA9E,KAAA6D,KAAAqC,KAAApB,EAAAvB,IAAA,WAAAuB,EAAA9E,MAAA6D,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAA9E,MAAA0G,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAU,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAA9E,KAAA,KAAAuJ,EAAAzE,EAAAvB,IAAAsD,EAAAP,GAAA,OAAAiD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAyB,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAN,SAAAxD,GAAA0D,IAAAnE,EAMO,IAAM6M,EAAW,WAAM,IAClBpC,EAAeC,qBAAWvK,GAA1BsK,WAAUL,EACMC,mBAAS,IAAGyC,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAA7B2C,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdnC,EAAU,eAAAtJ,EAAAS,OAAA+I,EAAA,EAAA/I,CAAA8K,IAAAxE,KAAG,SAAA0C,EAAOC,GAAC,IAAAK,EAAA6B,EAAA9B,EAAA+B,EAAA/L,EAAA,OAAAyL,IAAAxJ,KAAA,SAAAkI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,OAE4B,GADnDmE,EAAEQ,iBACMH,EAAgD2B,EAAhD3B,SAAU6B,EAAsCF,EAAtCE,kBAAmB9B,EAAmB4B,EAAnB5B,OAAQ+B,EAAWH,EAAXG,OACzC9B,IAAa6B,EAAiB,CAAA3B,EAAA1E,KAAA,eAAA0E,EAAAhF,OAAA,SAASjG,EAAO,0CAAqC,UAClFoB,EAAa0J,GAAO,CAAAG,EAAA1E,KAAA,eAAA0E,EAAAhF,OAAA,SAASjG,EAAO,sCAA8B,cAAAiL,EAAA1E,KAAA,EAEhD9F,EAAI0K,KAAK,oBAAqB,CACjDJ,WACAD,SACA+B,WACF,QAJI/L,EAAQmK,EAAAnF,MAMD5E,MACLJ,EAASI,KAAKkK,QACdC,aAAaC,QAAQ,QAASxK,EAASI,KAAKkK,OAC5ChB,EAAWtJ,EAASI,KAAKkK,QAEhC,yBAAAH,EAAAlC,SAAA0B,MACJ,gBAlBec,GAAA,OAAAvK,EAAAwK,MAAAtH,KAAAhE,YAAA,GAoBV4M,EAAc,SAAHvC,GAAmB,IAAbI,EAAMJ,EAANI,OACnBgC,EAAQ,SAACD,GAAI,OAAAjL,OAAA0K,EAAA,EAAA1K,CAAA,GACNiL,EAAKjL,OAAAI,EAAA,EAAAJ,CAAA,GACPkJ,EAAO7C,KAAO6C,EAAO1I,WAG9B,OACIwJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAe,gCAC5BH,EAAAC,EAAAC,cAAA,QAAMG,SAAUxB,GACZmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,OAAOuL,UAAU,eAAeI,YAAY,kBAAkBlE,KAAK,SAASmE,SAAUa,IAClGrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAI5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,OAAOuL,UAAU,eAAeI,YAAY,wBAAqBC,SAAUa,EAAahF,KAAK,WACzG2D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAI5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,WAAWyH,KAAK,WAAWkE,YAAY,gBAAaJ,UAAU,eAAeK,SAAUa,IACnGrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAI5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SACItL,KAAK,WACLyH,KAAK,oBACLkE,YAAY,wBACZJ,UAAU,eACVK,SAAUa,IAEdrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAI5BH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,SAAS4B,MAAM,cAAc2J,UAAU,2BAEvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACC,GAAG,KAAG,iCCnFnB7G,UAAQ,WACjB,OACIgG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoB,EAAA,EAAc,SCHdC,EAAM,WAAM,IACb5C,EAAeC,qBAAWvK,GAA1BsK,WAOR,OACIqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAEXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWqB,cAAY,WAAWC,KAAK,IAAIC,KAAK,UAC3D1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGrBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACVH,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACC,GAAG,IAAIV,UAAU,YAAU,YAMzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAEVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWwB,cAAY,WAAWF,KAAK,KAClDzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAK0B,QA5BV,WACXhC,aAAaiC,WAAW,SACxBlD,EAAW,OA0B2BwB,UAAU,iBAAe,oBAG/CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BCtC1B2B,EAAgB,SAACzL,EAAK0L,GAE/B,OADc1L,EAAI2L,IAAI,SAACC,GAAE,OAAKA,EAAGF,GAAOG,iBCI/BC,EAAW,SAACC,GAAQ,IAAAC,EACGzD,qBAAWvK,GAAnCyD,EAAOuK,EAAPvK,QAAS6G,EAAU0D,EAAV1D,WAAUL,EACDC,mBAAS,CAC/B9I,KAAM,KACRuL,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAFKvE,EAAKiH,EAAA,GAAEsB,EAAQtB,EAAA,GAAAuB,EAGMhE,oBAAS,GAAMiE,EAAAxM,OAAA0I,EAAA,EAAA1I,CAAAuM,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAoBxB,OAnBAG,oBAAU,WACN3N,EAAI4N,IAAIR,EAAK,CACTS,QAAS,CACLC,cAAe,UAAYhL,KAG9B+B,KAAK,SAACkJ,GACH,GAAmB,MAAfA,EAAIvN,OAEJ,OADAmJ,EAAW,MACJiB,aAAaiC,WAAW,SAGnCS,EAASS,EAAItN,QAEhByI,MAAM,SAAC7G,GACJ9C,EAAO8C,MAEhB,CAACoL,IAEG,CAAC1I,EAAO2I,IC9BNM,UAAa,WAAH,OAASC,UAAUC,UAAYD,UAAUE,eCEnDC,EAAa,SAACC,GAAI,OAC3B,IAAIC,KAAKD,GAAME,mBAAmBP,IAAc,CAC5CQ,KAAM,UACNC,IAAK,UACLC,MAAO,UAGFC,EAAc,SAACC,GAA+B,IAArBC,EAAQpP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAM7C,OALiB,IAAIqP,KAAKC,aAAaf,IAAc,CACjDgB,MAAO,WACPH,aAGYI,OAAOL,iBCd3BM,EAAA,kBAAAhQ,GAAA,IAAAA,EAAA,GAAA6B,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAAd,OAAAyC,EAAA1B,WAAA6B,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,EAAA,SAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvD,KAAA,SAAAuD,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAd,GAAA,OAAAzC,KAAA,QAAAuD,IAAAd,IAAAnD,EAAAoD,OAAA,IAAAe,EAAA,YAAAT,KAAA,SAAAU,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,EAAA,kBAAA8B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA2B,EAAA3B,UAAAD,OAAAd,OAAAsD,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAjC,MAAA,SAAAyC,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAJ,EAAAoB,GAAApB,EAAAM,GAAA,aAAAuB,EAAA9E,KAAA,KAAA+E,EAAAD,EAAAvB,IAAA3B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAkC,KAAA5B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAA7E,GAAA,OAAA2E,EAAA,QAAA3E,EAAAyE,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAT,EAAAE,EAAAK,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAV,EAAAE,EAAAK,GAAA,cAAA4B,EAAA9E,KAAA,IAAAmF,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA7B,MAAAkD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAA9E,OAAAmF,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAmB,EAAAiB,EAAAtD,SAAAkB,EAAAmB,QAAA,QAAAtE,IAAAsE,EAAA,IAAAnB,EAAAoC,SAAA,eAAApC,EAAAmB,OAAA,IAAAiB,EAAAtD,SAAA8D,SAAA5C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxD,EAAAyF,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,QAAA,OAAAZ,EAAAP,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAtD,SAAAkB,EAAAK,KAAA,aAAAuB,EAAA9E,KAAA,OAAAkD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAAlB,EAAAvB,IAAA,OAAAyC,IAAAH,MAAA3C,EAAAoC,EAAAW,YAAAD,EAAApE,MAAAsB,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,GAAAmD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAA9E,KAAA,gBAAA8E,EAAAvB,IAAA+C,EAAAQ,WAAAhC,EAAA,SAAA3B,EAAAL,GAAAe,KAAA8C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAsB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAlH,QAAA,KAAAqH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAlH,QAAA,GAAAwB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAtE,WAAA7B,EAAAmG,EAAAL,MAAA,EAAAK,GAAA,OAAAA,UAAA,OAAAA,KAAAb,GAAA,SAAAA,IAAA,OAAAzD,WAAA7B,EAAA8F,MAAA,UAAAnC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAAtC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAA7C,EAAA+H,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAnI,EAAAoI,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAAjG,UAAAD,OAAAd,OAAA4D,GAAAoD,GAAAhI,EAAAuI,MAAA,SAAAtE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA4B,OAAAvE,EAAAiF,gBAAAjF,EAAAwI,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAlF,EAAA+H,oBAAAzE,GAAAoF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA9B,UAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,EAAA,kBAAA8B,OAAAxB,EAAA6B,EAAA,mDAAA5E,EAAA2I,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAnI,QAAA,KAAA4B,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAtE,MAAAF,EAAAwE,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAL,MAAA,EAAAK,IAAA5G,EAAA2E,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA4B,KAAA5B,KAAA6B,WAAA3F,EAAA8D,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAxD,EAAA8D,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAlH,EAAAkC,KAAAK,KAAA4D,KAAAP,OAAAO,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1H,IAAA2I,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAA3I,KAAA,MAAA2I,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAA9E,KAAA,QAAA8E,EAAAvB,IAAAsF,EAAA3F,EAAAgD,KAAA6C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,KAAAiJ,EAAA,QAAA7B,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAArC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA8C,EAAA,YAAA4C,EAAA5H,EAAAkC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAb,OAAA,SAAA5F,EAAAuD,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAA0E,MAAAjH,EAAAkC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAnJ,GAAA,aAAAA,IAAAmJ,EAAA5C,QAAAhD,MAAA4F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAA9E,OAAA8E,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAA9E,KAAA,MAAA8E,EAAAvB,IAAA,gBAAAuB,EAAA9E,MAAA,aAAA8E,EAAA9E,KAAA6D,KAAAqC,KAAApB,EAAAvB,IAAA,WAAAuB,EAAA9E,MAAA6D,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAA9E,MAAA0G,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAU,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAA9E,KAAA,KAAAuJ,EAAAzE,EAAAvB,IAAAsD,EAAAP,GAAA,OAAAiD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAyB,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAN,SAAAxD,GAAA0D,IAAAnE,EAQO,IAAMiQ,EAAO,WAAM,IAAA9B,EACUzD,qBAAWvK,GAAnCyD,EAAOuK,EAAPvK,QAAmBsM,GAAA/B,EAAV1D,WACEwD,EAAS,cAArB9M,EAAiCW,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAAzB,GAAAC,EACElC,EAAS,WAAnBmC,EAA6BtO,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAAvB,GAAA/F,EAEmBC,mBAAS,uBAAsByC,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAAxDiG,EAAQvD,EAAA,GAAEwD,EAAWxD,EAAA,GAAAuB,EACMhE,oBAAS,GAAMiE,EAAAxM,OAAA0I,EAAA,EAAA1I,CAAAuM,EAAA,GAA1CkC,EAASjC,EAAA,GAAEkC,EAAYlC,EAAA,GAAAmC,EACJpG,mBAAS,GAAEqG,EAAA5O,OAAA0I,EAAA,EAAA1I,CAAA2O,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EAEmBxG,mBAAS,MAAKyG,EAAAhP,OAAA0I,EAAA,EAAA1I,CAAA+O,EAAA,GAEnDE,GAFeD,EAAA,GAAkBA,EAAA,GAEjB3P,EAASI,KAAOJ,EAASI,KAAO,IAEhDyP,EAAO,CAAEC,UAAW,EAAGD,KAAM,EAAGE,OAAQ,OAExCd,EAAO7O,MACH6O,EAAO7O,KAAK,KACZyP,EAAOZ,EAAO7O,KAAK,IAG3B,IAAM4P,EAAkB,WACpBX,EAAa,SAAC3K,GAAK,OAAMA,KAEvBuL,EAAc,SAAH/P,GAAmB,IAAb2J,EAAM3J,EAAN2J,OACnBmG,IAAiB,IAAAE,EAAAvP,OAAA0I,EAAA,EAAA1I,CACMkJ,EAAOsG,SAAQ,GAA/BC,EAAKF,EAAA,GAAEG,EAAKH,EAAA,GACnBf,EAAW,GAAAmB,OAAIF,EAAMjP,MAAK,OAAAmP,OAAMD,EAAME,aAGpCC,EAAe,eAAA/G,EAAA9I,OAAA+I,EAAA,EAAA/I,CAAAkO,IAAA5H,KAAG,SAAA0C,EAAOC,GAAC,OAAAiF,IAAA5M,KAAA,SAAAkI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,OACV,OAAlBmE,EAAEQ,iBAAgBD,EAAA1E,KAAA,EACA9F,EAAI0K,KAAI,iBAEtB,CAAEwF,KAAML,GACR,CACIhC,QAAS,CACLC,cAAe,UAAYhL,KAGtC,OAEkB,MAVV0H,EAAAnF,KAUD7E,SACJ0P,EAAKA,KAAOL,EACZC,EAAS,IACZ,wBAAAtF,EAAAlC,SAAA0B,MACJ,gBAhBoBc,GAAA,OAAAhB,EAAAiB,MAAAtH,KAAAhE,YAAA,GAsBrB,OACIuL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACI9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,QAAME,OAAO,GAAGC,SAAUwF,GACtB7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,6BAAqByD,EAAYuB,EAAKA,KAAM,QAE5ClF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACItL,KAAK,SACLuL,UAAU,eACV9D,KAAK,cACL7F,MAAOqO,EACPrE,SAtBhB,SAACvB,GACjB6F,EAAS7F,EAAEC,OAAO1I,YAyBEwJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,SAAS4B,MAAM,UAAU2J,UAAU,oBAI3DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,qBAAAwF,OAAuBlB,GAAa,WAC7CQ,EAAcjD,IAAI,SAAA+D,GAA4B,IAAzBC,EAAUD,EAAVC,WAAY5E,EAAM2E,EAAN3E,OAC9B,OACIpB,EAAAC,EAAAC,cAAA,OACIC,UAAU,SACVyB,QAAS0D,EACThP,IAAK0P,GAELhG,EAAAC,EAAAC,cAAA,SACItL,KAAK,QACLuL,UAAU,QACVG,GAAIc,EACJ/E,KAAK,WACL7F,MAAOwP,IAEXhG,EAAAC,EAAAC,cAAA,SAAO+F,QAAS7E,GAASA,OAKzCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWyB,QAASyD,GAC9Bd,WCnH5B2B,EAAa,SAAH3Q,EAAAuJ,GAAavJ,EAAPG,QAAsC,IAA7BD,EAAIF,EAAJE,KAAU6K,EAAExB,EAAFwB,GAAI6F,EAAQrH,EAARqH,SAC1CC,EAAU,GAWhB,OAVI3Q,GACAA,EAAKuM,IAAI,SAACC,GACN,IAAMoE,EAAM,CACRhK,KAAM4F,EAAGkE,GACT3P,MAAOyL,EAAG3B,IAGd,OADA8F,EAAQ5K,KAAK6K,IACN,IAGRD,+BCXXE,EAAA,kBAAApS,GAAA,IAAAA,EAAA,GAAA6B,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAAd,OAAAyC,EAAA1B,WAAA6B,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,EAAA,SAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvD,KAAA,SAAAuD,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAd,GAAA,OAAAzC,KAAA,QAAAuD,IAAAd,IAAAnD,EAAAoD,OAAA,IAAAe,EAAA,YAAAT,KAAA,SAAAU,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,EAAA,kBAAA8B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA2B,EAAA3B,UAAAD,OAAAd,OAAAsD,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAjC,MAAA,SAAAyC,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAJ,EAAAoB,GAAApB,EAAAM,GAAA,aAAAuB,EAAA9E,KAAA,KAAA+E,EAAAD,EAAAvB,IAAA3B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAkC,KAAA5B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAA7E,GAAA,OAAA2E,EAAA,QAAA3E,EAAAyE,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAT,EAAAE,EAAAK,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAV,EAAAE,EAAAK,GAAA,cAAA4B,EAAA9E,KAAA,IAAAmF,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA7B,MAAAkD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAA9E,OAAAmF,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAmB,EAAAiB,EAAAtD,SAAAkB,EAAAmB,QAAA,QAAAtE,IAAAsE,EAAA,IAAAnB,EAAAoC,SAAA,eAAApC,EAAAmB,OAAA,IAAAiB,EAAAtD,SAAA8D,SAAA5C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxD,EAAAyF,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,QAAA,OAAAZ,EAAAP,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAtD,SAAAkB,EAAAK,KAAA,aAAAuB,EAAA9E,KAAA,OAAAkD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAAlB,EAAAvB,IAAA,OAAAyC,IAAAH,MAAA3C,EAAAoC,EAAAW,YAAAD,EAAApE,MAAAsB,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,GAAAmD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAA9E,KAAA,gBAAA8E,EAAAvB,IAAA+C,EAAAQ,WAAAhC,EAAA,SAAA3B,EAAAL,GAAAe,KAAA8C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAsB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAlH,QAAA,KAAAqH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAlH,QAAA,GAAAwB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAtE,WAAA7B,EAAAmG,EAAAL,MAAA,EAAAK,GAAA,OAAAA,UAAA,OAAAA,KAAAb,GAAA,SAAAA,IAAA,OAAAzD,WAAA7B,EAAA8F,MAAA,UAAAnC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAAtC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAA7C,EAAA+H,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAnI,EAAAoI,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAAjG,UAAAD,OAAAd,OAAA4D,GAAAoD,GAAAhI,EAAAuI,MAAA,SAAAtE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA4B,OAAAvE,EAAAiF,gBAAAjF,EAAAwI,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAlF,EAAA+H,oBAAAzE,GAAAoF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA9B,UAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,EAAA,kBAAA8B,OAAAxB,EAAA6B,EAAA,mDAAA5E,EAAA2I,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAnI,QAAA,KAAA4B,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAtE,MAAAF,EAAAwE,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAL,MAAA,EAAAK,IAAA5G,EAAA2E,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA4B,KAAA5B,KAAA6B,WAAA3F,EAAA8D,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAxD,EAAA8D,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAlH,EAAAkC,KAAAK,KAAA4D,KAAAP,OAAAO,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1H,IAAA2I,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAA3I,KAAA,MAAA2I,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAA9E,KAAA,QAAA8E,EAAAvB,IAAAsF,EAAA3F,EAAAgD,KAAA6C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,KAAAiJ,EAAA,QAAA7B,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAArC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA8C,EAAA,YAAA4C,EAAA5H,EAAAkC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAb,OAAA,SAAA5F,EAAAuD,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAA0E,MAAAjH,EAAAkC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAnJ,GAAA,aAAAA,IAAAmJ,EAAA5C,QAAAhD,MAAA4F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAA9E,OAAA8E,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAA9E,KAAA,MAAA8E,EAAAvB,IAAA,gBAAAuB,EAAA9E,MAAA,aAAA8E,EAAA9E,KAAA6D,KAAAqC,KAAApB,EAAAvB,IAAA,WAAAuB,EAAA9E,MAAA6D,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAA9E,MAAA0G,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAU,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAA9E,KAAA,KAAAuJ,EAAAzE,EAAAvB,IAAAsD,EAAAP,GAAA,OAAAiD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAyB,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAN,SAAAxD,GAAA0D,IAAAnE,EAIO,IAAMqS,EAAU,WAUZ,IAAAhR,EAAAd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAE+R,EAAAjR,EATFkR,eAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAAnR,EACZE,YAAI,IAAAiR,EAAG,GAAEA,EAAAC,EAAApR,EACTqR,kBAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAAtR,EACfuR,gBAAQ,IAAAD,EAAG,IAAGA,EAAAE,EAAAxR,EACdyR,qBAAa,IAAAD,EAAG,KAAIA,EAAAE,EAAA1R,EACpB2R,gBAAQ,IAAAD,EAAG,WACP1S,EAAO,8CAEV0S,EAAA5E,EAE+BzD,qBAAWvK,GAAnCyD,EAAOuK,EAAPvK,QAAS6G,EAAU0D,EAAV1D,WAAUL,EACDC,mBAAS,IAAGyC,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAA/B6I,EAAKnG,EAAA,GAAEoG,EAAQpG,EAAA,GAAAuB,EACAhE,oBAAS,GAAMiE,EAAAxM,OAAA0I,EAAA,EAAA1I,CAAAuM,EAAA,GAA9B8E,EAAG7E,EAAA,GAAE8E,EAAM9E,EAAA,GAAAmC,EACMpG,oBAAS,GAAMqG,EAAA5O,OAAA0I,EAAA,EAAA1I,CAAA2O,EAAA,GAAhC4C,EAAI3C,EAAA,GAAE4C,EAAO5C,EAAA,GAAAG,EACAxG,mBAAS,MAAKyG,EAAAhP,OAAA0I,EAAA,EAAA1I,CAAA+O,EAAA,GAA3BzE,EAAE0E,EAAA,GAAEyC,EAAKzC,EAAA,GACVV,EAAS,CACXzB,QAAS,CACLC,cAAe,UAAYhL,IAI7B4P,EAAiB,WACnBR,EAAS,CAAEzR,KAAM,MAGfkS,EAAY,eAAA7I,EAAA9I,OAAA+I,EAAA,EAAA/I,CAAAsQ,IAAAhK,KAAG,SAAA0C,EAAO8H,EAAUE,GAAa,IAAA5E,EAAA,OAAAkE,IAAAhP,KAAA,SAAAkI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,OACzCsH,EAAG,IAAAuD,OAAOmB,EAAQ,KAAAnB,OAAIqB,GAE5BhS,EAAI4S,OAAOxF,EAAKkC,GAAQzK,KAAK,SAACkJ,GAC1B,GAAmB,MAAfA,EAAIvN,OAEJ,OADAmJ,EAAW,MACJiB,aAAaiC,WAAW,SAEnC6F,MAGJA,IAAgB,wBAAAlI,EAAAlC,SAAA0B,MACnB,gBAZiBc,EAAA+H,GAAA,OAAA/I,EAAAiB,MAAAtH,KAAAhE,YAAA,GAcZqT,EAAY,WACdR,GAAQD,GACRG,GAAQ,IAGNO,EAAa,WACfT,GAAO,GACPE,GAASD,IAGPS,EAAM,eAAAjC,EAAA/P,OAAA+I,EAAA,EAAA/I,CAAAsQ,IAAAhK,KAAG,SAAA2L,EAAO3H,GAAE,IAAA8B,EAAA8F,EAAAzS,EAAAJ,EAAA,OAAAiR,IAAAhP,KAAA,SAAA6Q,GAAA,cAAAA,EAAAhL,KAAAgL,EAAArN,MAAA,OACU,OAAxBsH,EAAG,IAAAuD,OAAOmB,EAAQ,KAAAnB,OAAIrF,GAAE6H,EAAArN,KAAA,EACP9F,EAAI4N,IAAIR,EAAKkC,GAAO,OAA/B,OAA+B4D,EAAAC,EAAA9N,KAAnC5E,EAAIyS,EAAJzS,KAAI0S,EAAArN,KAAA,EACWrF,EAAKA,KAAI,OAA1BJ,EAAQ8S,EAAA9N,KACd+M,EAAS/R,EAAS,IAClBoS,EAAMpS,EAAS,GAAG2R,IAClBe,IAAY,yBAAAI,EAAA7K,SAAA2K,MACf,gBAPWG,GAAA,OAAArC,EAAAhG,MAAAtH,KAAAhE,YAAA,GAwCN4T,EAAgBC,mBAAS,CAAE7B,UAAShR,SAClC8S,EAAqEF,EAArEE,cAAeC,EAAsDH,EAAtDG,kBAAmBC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,WAE9D,OACI3I,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACMuB,GAAQE,EAMNF,EACArH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,YAE9BH,EAAAC,EAAAC,cAAA,QAAME,OAAQ0G,EAAUzG,SA/CrB,SAACpB,GAChBA,EAAEQ,iBACF,IAAMmJ,EAAW,IAAIC,SAAS5J,EAAEC,QAC1B4J,EAAS9S,OAAA+S,EAAA,EAAA/S,CAAO4S,GAChBnT,EAAOO,OAAOgT,YAAYF,GAChC9T,EAAI0K,KAAI,IAAAiG,OAAKmB,GAAYrR,EAAM6O,GAAQzK,KAAK,SAACpE,GACrB,MAAhBA,EAAKD,QAAkC,MAAhBC,EAAKD,SAEhCjB,EAAO,iCAA+B,WACtCmT,IACAI,SAsCY9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVsG,EAAQzE,IAAI,SAAAiH,EAA4ClN,GAAM,IAA/CmN,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SAAU/C,EAAO6C,EAAP7C,QAASxR,EAAIqU,EAAJrU,KACvC,OADiDqU,EAAJG,KAC5B,GACbD,IAAanC,EACTZ,EAEIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB7J,IAAG,UAAAqP,OAAY5J,IAC7CiE,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAIiD,GACnBlJ,EAAAC,EAAAC,cAAA,UACI7D,KAAM8M,EACN7I,GAAG,GACH+I,UAAQ,EACRlJ,UAAU,gBAETiG,EAAQpE,IAAI,SAACC,GACV,OACIjC,EAAAC,EAAAC,cAAA,UAAQ1J,MAAOyL,EAAGzL,MAAOF,IAAG,UAAAqP,OAAY5J,IACnCkG,EAAG5F,UAS5B2D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACI9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAIiD,GACnBlJ,EAAAC,EAAAC,cAAA,SACI7D,KAAM8M,EACNvU,KAAMA,EACN2L,YAAa2I,EACbG,UAAQ,EACRlJ,UAAU,mBAOvB,KAEVyG,EAAW5E,IAAI,SAAAsH,EAAuBvN,GAAM,IAA1BmN,EAAMI,EAANJ,OAAQC,EAAQG,EAARH,SACvB,OACInJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB7J,IAAKyF,GACnCiE,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAIiD,GACnBlJ,EAAAC,EAAAC,cAAA,SACI7D,KAAM8M,EACN5I,YAAa2I,EACb/I,UAAU,eACVkJ,UAAQ,QAO5BrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQtL,KAAK,SAASuL,UAAU,mBAAiB,WAGjDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsByB,QAASkG,GAAU,eAOpE9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,WAE9BH,EAAAC,EAAAC,cAAA,QAAME,OAAQ0G,EAAUzG,SA5GjB,SAACpB,GACpBA,EAAEQ,iBACF,IAAM2C,EAAG,IAAAuD,OAAOmB,EAAQ,UAAAnB,OAASrF,GAC3BsI,EAAW,IAAIC,SAAS5J,EAAEC,QAC1B4J,EAAS9S,OAAA+S,EAAA,EAAA/S,CAAO4S,GAChBnT,EAAOO,OAAOgT,YAAYF,GAChC9T,EAAI0K,KAAK0C,EAAK3M,EAAM6O,GACfzK,KAAK,SAACkJ,GACH,GAAmB,MAAfA,EAAIvN,OAAgB,MAAO,GAC/BjB,EAAO,oCAAkC,WACzCiT,GAAQ,GACRE,MAEHxJ,MAAM,SAAC7G,GACJ9C,EAAO,qCA+FCyL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVsG,EAAQzE,IAAI,SAAAuH,EAA4CxN,GAAM,IAA/CmN,EAAMK,EAANL,OAAQC,EAAQI,EAARJ,SAAU/C,EAAOmD,EAAPnD,QAASxR,EAAI2U,EAAJ3U,KACvC,OADiD2U,EAAJH,KAC5B,GACbD,IAAanC,EACTZ,EAEIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB7J,IAAKyF,GACnCiE,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAIiD,GACnBlJ,EAAAC,EAAAC,cAAA,UAAQ7D,KAAM8M,EAAUhJ,UAAU,gBAC7BiG,EAAQpE,IAAI,SAACC,GACV,OACIjC,EAAAC,EAAAC,cAAA,UACI1J,MAAOyL,EAAGzL,MACVF,IAAK2L,EAAGzL,MACR+N,SACItC,EAAGzL,QAAU2Q,EAAMgC,IAAa,YAGnClH,EAAG5F,MAAQ4F,EAAG5F,UASvC2D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACI9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB7J,IAAKyF,GACnCiE,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAIiD,GACnBlJ,EAAAC,EAAAC,cAAA,SACI7D,KAAM8M,EACNvU,KAAMA,EACN2L,YAAa2I,EACbG,UAAQ,EACRlJ,UAAU,eACVqJ,aAAcrC,EAAMgC,OAOjC,KAEVvC,EAAW5E,IAAI,SAAAyH,EAAuB1N,GAAM,IAA1BmN,EAAMO,EAANP,OAAQC,EAAQM,EAARN,SACvB,OACInJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,GAAG3P,IAAKyF,GAClBmN,GAELlJ,EAAAC,EAAAC,cAAA,SACI7D,KAAM8M,EACN5I,YAAa2I,EACb5S,IAAKyF,EACLoE,UAAU,eACVkJ,UAAQ,QAO5BrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQtL,KAAK,SAASuL,UAAU,gBAAc,WAG9CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsByB,QAASmG,GAAW,eAxJrE/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAK0B,QAASkG,EAAW3H,UAAU,uBAC/BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBA6JzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAAlK,OAAA0T,OAAA,CAAOvJ,UAAU,iCAAoCoI,KACjDvI,EAAAC,EAAAC,cAAA,aACKuI,EAAazG,IAAI,SAAC2H,GAAW,OAC1B3J,EAAAC,EAAAC,cAAA,KAAQyJ,EAAYC,sBAChB5J,EAAAC,EAAAC,cAAA,uBACCyJ,EAAY9G,QAAQb,IAAI,SAAC6H,GAAM,OAC5B7J,EAAAC,EAAAC,cAAA,KAAQ2J,EAAOC,iBAAmBD,EAAOE,OAAO,iBAKhE/J,EAAAC,EAAAC,cAAA,QAAWsI,IACNE,EAAK1G,IAAI,SAACgI,GAEP,OADArB,EAAWqB,GAEPhK,EAAAC,EAAAC,cAAA,KAAQ8J,EAAIC,cACPD,EAAIE,MAAMlI,IAAI,SAACmI,EAAMC,GAClB,IACMC,EADQF,EAAKH,IAAIE,MAAME,GAAOJ,IAAIM,SAASF,GAC3BP,OAChBU,EAAWF,EAAQjE,QACnBoE,EAAUH,EAAQG,QACpBC,EAAQ,GAKZ,OAJID,IACAC,EAAQF,EAASG,KAAK,SAACrE,GAAG,MAAK,GAAAV,OAAGU,EAAI7P,SAAK,GAAAmP,OAAUwE,EAAK3T,YAC/CiU,EAAQA,EAAMpO,MAEf,IAAV+N,EAEIpK,EAAAC,EAAAC,cAACyK,EAAA,SAAQ,CAACrU,IAAK6T,EAAKJ,OAAO,SACvB/J,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAAA,OACI0B,QAAS,kBACLoG,EAAOmC,EAAKH,IAAIY,SAAS5D,KAE7BnG,GAAE,GAAA8E,OAAKmB,EAAQ,YAAAnB,OAAWwE,EAAKH,IAAIY,SAAS5D,IAC5C7G,UAAU,wBAEVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAEjBH,EAAAC,EAAAC,cAAA,OACI0B,QAAS,kBACL+F,EACIb,EACAqD,EAAKH,IAAIY,SAAS5D,KAG1BnG,GAAE,GAAA8E,OAAKmB,EAAQ,cAAAnB,OAAawE,EAAKH,IAAIY,SAAS5D,IAC9C7G,UAAU,kBAEVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAGrBH,EAAAC,EAAAC,cAAA,KAAQiK,EAAKU,eACRL,EAAUC,EAAQN,EAAKJ,OAAO,UAM3C/J,EAAAC,EAAAC,cAAA,KAAQiK,EAAKU,eACRL,EAAUC,EAAQN,EAAKJ,OAAO,mBC9TlEe,EAAY,SAAHvV,GAA0B,IAApBkR,EAAOlR,EAAPkR,QAAShR,EAAIF,EAAJE,KACjC,OACIuK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACKuG,EAAQzE,IAAI,SAAC6H,GACV,OAAO7J,EAAAC,EAAAC,cAAA,UAAK2J,OAIxB7J,EAAAC,EAAAC,cAAA,aACKzK,EAAKuM,IAAI,SAAC+I,GACP,IAAMC,EACW,IAAbD,EAAIC,KACE,cACY,GAAZD,EAAIC,KACJ,aACa,IAAbD,EAAIC,KACJ,iBACA,iBAEV,OACIhL,EAAAC,EAAAC,cAAA,MAAI5J,IAAKyU,EAAIE,QACTjL,EAAAC,EAAAC,cAAA,UAAK6K,EAAIE,QACTjL,EAAAC,EAAAC,cAAA,UAAKkD,EAAW2H,EAAIG,iBACpBlL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAS,YAAAwF,OAAcoF,EAAIC,KAAO,GAAK,EAAI,SAAW,YACvDA,IAGThL,EAAAC,EAAAC,cAAA,UAAKyD,EAAYoH,EAAII,kBChCxCC,EAAoB,SAAH7V,GAGxB,IAAA8V,EAAA9V,EAFF+V,cAAM,IAAAD,EAAG,cAAaA,EAAAE,EAAAhW,EACtBiW,eAAO,IAAAD,EAAG,8FAA0FA,EAEpG,OACIvL,EAAAC,EAAAC,cAAA,cAAYC,UAAU,qBAClBH,EAAAC,EAAAC,cAAA,MAAII,GAAG,YAAYgL,GACnBtL,EAAAC,EAAAC,cAAA,SAAIsL,KCTHC,EAAwB,SAAChW,GAGlC,OAFYA,EAAKA,MAAQA,EAAKA,KAAK,GAAKA,EAAKA,KAAK,GAAGiW,eAAsB,GAKlEC,EAAoB,SAAHpW,GAAmB,IAAb2J,EAAM3J,EAAN2J,OAC1B0J,EAAW,IAAIC,SAAS3J,GACxB4J,EAAS9S,OAAA+S,EAAA,EAAA/S,CAAO4S,GAEtB,OADa5S,OAAOgT,YAAYF,iBCRpC8C,EAAA,kBAAA1X,GAAA,IAAAA,EAAA,GAAA6B,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAAd,OAAAyC,EAAA1B,WAAA6B,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,EAAA,SAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAvD,KAAA,SAAAuD,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAd,GAAA,OAAAzC,KAAA,QAAAuD,IAAAd,IAAAnD,EAAAoD,OAAA,IAAAe,EAAA,YAAAT,KAAA,SAAAU,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,EAAA,kBAAA8B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA2B,EAAA3B,UAAAD,OAAAd,OAAAsD,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAjC,MAAA,SAAAyC,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAJ,EAAAoB,GAAApB,EAAAM,GAAA,aAAAuB,EAAA9E,KAAA,KAAA+E,EAAAD,EAAAvB,IAAA3B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAkC,KAAA5B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAA7E,GAAA,OAAA2E,EAAA,QAAA3E,EAAAyE,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAT,EAAAE,EAAAK,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAV,EAAAE,EAAAK,GAAA,cAAA4B,EAAA9E,KAAA,IAAAmF,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA7B,MAAAkD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAA9E,OAAAmF,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAmB,EAAAiB,EAAAtD,SAAAkB,EAAAmB,QAAA,QAAAtE,IAAAsE,EAAA,IAAAnB,EAAAoC,SAAA,eAAApC,EAAAmB,OAAA,IAAAiB,EAAAtD,SAAA8D,SAAA5C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxD,EAAAyF,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,QAAA,OAAAZ,EAAAP,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAtD,SAAAkB,EAAAK,KAAA,aAAAuB,EAAA9E,KAAA,OAAAkD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAAlB,EAAAvB,IAAA,OAAAyC,IAAAH,MAAA3C,EAAAoC,EAAAW,YAAAD,EAAApE,MAAAsB,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,GAAAmD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAA9E,KAAA,gBAAA8E,EAAAvB,IAAA+C,EAAAQ,WAAAhC,EAAA,SAAA3B,EAAAL,GAAAe,KAAA8C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAsB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAlH,QAAA,KAAAqH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAlH,QAAA,GAAAwB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAtE,WAAA7B,EAAAmG,EAAAL,MAAA,EAAAK,GAAA,OAAAA,UAAA,OAAAA,KAAAb,GAAA,SAAAA,IAAA,OAAAzD,WAAA7B,EAAA8F,MAAA,UAAAnC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAAtC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAA7C,EAAA+H,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAnI,EAAAoI,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAAjG,UAAAD,OAAAd,OAAA4D,GAAAoD,GAAAhI,EAAAuI,MAAA,SAAAtE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA4B,OAAAvE,EAAAiF,gBAAAjF,EAAAwI,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAlF,EAAA+H,oBAAAzE,GAAAoF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA9B,UAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,EAAA,kBAAA8B,OAAAxB,EAAA6B,EAAA,mDAAA5E,EAAA2I,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAnI,QAAA,KAAA4B,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAtE,MAAAF,EAAAwE,EAAAL,MAAA,EAAAK,EAAA,OAAAA,EAAAL,MAAA,EAAAK,IAAA5G,EAAA2E,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA4B,KAAA5B,KAAA6B,WAAA3F,EAAA8D,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAxD,EAAA8D,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAlH,EAAAkC,KAAAK,KAAA4D,KAAAP,OAAAO,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1H,IAAA2I,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAA3I,KAAA,MAAA2I,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAA9E,KAAA,QAAA8E,EAAAvB,IAAAsF,EAAA3F,EAAAgD,KAAA6C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxD,KAAAiJ,EAAA,QAAA7B,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAArC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA8C,EAAA,YAAA4C,EAAA5H,EAAAkC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAb,OAAA,SAAA5F,EAAAuD,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAA0E,MAAAjH,EAAAkC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAnJ,GAAA,aAAAA,IAAAmJ,EAAA5C,QAAAhD,MAAA4F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAA9E,OAAA8E,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAA9E,KAAA,MAAA8E,EAAAvB,IAAA,gBAAAuB,EAAA9E,MAAA,aAAA8E,EAAA9E,KAAA6D,KAAAqC,KAAApB,EAAAvB,IAAA,WAAAuB,EAAA9E,MAAA6D,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAA9E,MAAA0G,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAU,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAA7G,OAAA,EAAAqH,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAA9E,KAAA,KAAAuJ,EAAAzE,EAAAvB,IAAAsD,EAAAP,GAAA,OAAAiD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAyB,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAN,SAAAxD,GAAA0D,IAAAnE,EAOO,ICLM2X,EAAiB,SAAHtW,GAA0D,IAAAiR,EAAAjR,EAApDkR,eAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAAnR,EAAEE,YAAI,IAAAiR,EAAG,GAAEA,EAAAK,EAAAxR,EAAEyR,qBAAa,IAAAD,EAAG,KAAIA,EACpEsB,EAAgBC,mBAAS,CAAE7B,UAAShR,SAClC8S,EAAqEF,EAArEE,cAAeC,EAAsDH,EAAtDG,kBAAmBC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,WAC9D,OACI3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAAlK,OAAA0T,OAAA,CAAOvJ,UAAU,iCAAoCoI,KACjDvI,EAAAC,EAAAC,cAAA,aACKuI,EAAazG,IAAI,SAAC2H,GAAW,OAC1B3J,EAAAC,EAAAC,cAAA,KAAQyJ,EAAYC,sBAChB5J,EAAAC,EAAAC,cAAA,uBACCyJ,EAAY9G,QAAQb,IAAI,SAAC6H,GAAM,OAC5B7J,EAAAC,EAAAC,cAAA,KAAQ2J,EAAOC,iBAAmBD,EAAOE,OAAO,iBAKhE/J,EAAAC,EAAAC,cAAA,QAAWsI,IACNE,EAAK1G,IAAI,SAACgI,EAAKI,GAGZ,OAFAzB,EAAWqB,GAGPhK,EAAAC,EAAAC,cAAA,KAAQ8J,EAAIC,cACPD,EAAIE,MAAMlI,IAAI,SAACmI,EAAMC,GAClB,OACIpK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACe,IAAVsE,EACGpK,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAACU,EAAA,EAAI,CACDT,UAAU,uBACVU,GAAE,aAAA8E,OAAewE,EAAKH,IAAIY,SAAS5D,KAEnChH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAGrB,KACJH,EAAAC,EAAAC,cAAA,KAAQiK,EAAKU,eAAiBV,EAAKJ,OAAO,mBCjCzE+B,EAAW,WAAM,IAAA1H,EACMjC,EAAS,aAAY4J,EAAA/V,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA9C/O,EAAQ0W,EAAA,GAAEC,EAAWD,EAAA,GAAA1H,EACZlC,EAAS,UAAlB8J,EAA2BjW,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAAtB,GAGNoC,EAAU,CACZ,CACIyC,OAAQ,KACRC,SAAU,cAEd,CACID,OAAQ,SACRC,SAAU,SACVvU,KAAM,QAEV,CACIsU,OAAQ,wBACRC,SAAU,SACVvU,KAAM,SAEV,CACIsU,OAAQ,MACRC,SAAU,MACV/C,QApBQF,EAAW+F,EAAO,CAAE3L,GAAI,SAAU6F,SAAU,WAqBpDqE,SAAS,IAIjB,OACIxK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,YAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgM,EAAO,CACJzF,QAASA,EACThR,KAAMJ,EAASI,KACfqR,SAAS,WACTE,cAAc,aACdJ,WAAY,CACR,CACIsC,OAAQ,gBACRC,SAAU,aAGlBjC,SAAU8E,KAGlBhM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4CACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,YAAYtB,UAAU,aAAW,SAI7CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,YAAYtB,UAAU,aAAW,YCnD5DgM,EACC,WADDA,EAEM,gBAFNA,EAGE,cAHFA,EAIA,aAEAC,EAAQ,CACjB,CACIhL,OAAQ,WACRiL,UAAWF,EACXG,WAAYR,EACZhF,SAAU,YACVyF,MAAO,wBAEX,CACInL,OAAQ,WACRiL,UAAWF,EACXG,WCtBgB,WAAM,IAAAlI,EACMjC,EAAS,aAAY4J,EAAA/V,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA9C/O,EAAQ0W,EAAA,GAAEC,EAAWD,EAAA,GAAA1H,EACZlC,EAAS,aAAlB8J,EAA8BjW,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAAzB,GAENoC,EAAU,CACZ,CACIyC,OAAQ,IACRC,SAAU,cAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,wBACRC,SAAU,UAEd,CACID,OAAQ,cACRC,SAAU,YAEd,CACID,OAAQ,MACRC,SAAU,OAEd,CACID,OAAQ,sBACRC,SAAU,mBACVvU,KAAM,QAEV,CACIsU,OAAQ,eACRC,SAAU,aAEd,CACID,OAAQ,qBACRC,SAAU,kBAEd,CACID,OAAQ,cACRC,SAAU,iBACVC,MAAM,EACNhD,QAvCQF,EAAW+F,EAAO,CAAE3L,GAAI,aAAc6F,SAAU,WAwCxDqE,SAAS,IAGjB,OACIxK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,YAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgM,EAAO,CACJzF,QAASA,EACThR,KAAMJ,EAASI,KACfqR,SAAS,WACTE,cAAc,aACdJ,WAAY,GACZM,SAAU8E,SDnC9BO,MAAO,uBACPzF,SAAU,aAEd,CACI1F,OAAQ,sBACRiL,UAAWF,EACXG,WE5BoB,WAAM,IAAAlI,EACEjC,EAAS,iBAAgB4J,EAAA/V,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAAlD/O,EAAQ0W,EAAA,GAAEC,EAAWD,EAAA,GAAA1H,EACZlC,EAAS,UAAlB8J,EAA2BjW,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAAtB,GAENoC,EAAU,CACZ,CACIyC,OAAQ,IACRC,SAAU,aAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,MACRC,SAAU,SACV/C,QAbQF,EAAW+F,EAAO,CAAE3L,GAAI,SAAU6F,SAAU,WAcpDqE,SAAS,IAGjB,OACIxK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsM,EAAiB,MAClBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,uBAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgM,EAAO,CACJzF,QAASA,EACThR,KAAMJ,EAASI,KACfqR,SAAS,eACTE,cAAc,YACdJ,WAAY,GACZM,SAAU8E,SFJ9BO,MAAO,sBACPzF,SAAU,gBAEd,CACI1F,OAAQ,QACRiL,UAAWF,EACXG,WGpCa,WAAM,IAAAlI,EACSjC,EAAS,UAAS4J,EAAA/V,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA3C/O,EAAQ0W,EAAA,GAAEC,EAAWD,EAAA,GAW5B,OACI/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsM,EAAiB,MAClBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,SAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgM,EAAO,CACJzF,QAlBR,CACZ,CACIyC,OAAQ,IACRC,SAAU,UAEd,CACID,OAAQ,SACRC,SAAU,WAYM1T,KAAMJ,EAASI,KACfqR,SAAS,QACTE,cAAc,SACdJ,WAAY,GACZM,SAAU8E,SHY9BO,MAAO,4BACPzF,SAAU,UAEd,CACI1F,OAAQ,UACRiL,UAAWF,EACXG,WAAYR,EACZhF,SAAU,iBACVyF,MAAO,0BAEX,CACInL,OAAQ,oBACRiL,UAAWF,EACXG,WH/CqB,WACzB,IAAMG,EAAWC,cACXpI,EOLC,CACHzB,QAAS,CACLC,cAAe,UAHHlE,qBAAWvK,GAAvByD,UPOF+G,EAAU,eAAAtJ,EAAAS,OAAA+I,EAAA,EAAA/I,CAAA4V,IAAAtP,KAAG,SAAA0C,EAAOC,GAAC,IAAA0N,EAAA,OAAAf,IAAAtU,KAAA,SAAAkI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,OACvBmE,EAAEQ,iBACIkN,EAAahB,EAAkB1M,GACrCjK,EAAI0K,KAAK,aAAciN,EAAYrI,GAAQzK,KAAK,SAACkJ,GAC7C,GAAmB,MAAfA,EAAIvN,OAAgB,OAAO,KAC/BjB,EAAO,sCAAiC,WACxCkY,EAAQ,aAAA9G,OAAc5C,EAAItN,KAAKA,KAAK,OACtC,wBAAA+J,EAAAlC,SAAA0B,MACL,gBARec,GAAA,OAAAvK,EAAAwK,MAAAtH,KAAAhE,YAAA,GAQf2P,EAEiBjC,EAAS,YAApByK,EAA+B5W,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAAxB,GAAAC,EACKlC,EAAS,aAArB0K,EAAiC7W,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAAzB,GAEf,OACIrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,qBAC3BH,EAAAC,EAAAC,cAAA,QAAMG,SAAUxB,GACZmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAE,WACjBjG,EAAAC,EAAAC,cAAA,UAAQ7D,KAAK,aAAaiE,GAAG,GAAGH,UAAU,eAAekJ,UAAQ,GAC5DwD,EAASpX,KAAKuM,IAAI,SAAAlD,GAAA,IAAGkH,EAAUlH,EAAVkH,WAAY5E,EAAMtC,EAANsC,OAAQ0L,EAAGhO,EAAHgO,IAAG,OACzC9M,EAAAC,EAAAC,cAAA,UAAQ1J,MAAOwP,GAAa5E,EAAS,IAAM0L,OAIvD9M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAE,UACjBjG,EAAAC,EAAAC,cAAA,UAAQ7D,KAAK,YAAYiE,GAAG,GAAGH,UAAU,eAAekJ,UAAQ,GAC3DuD,EAAQnX,KAAKuM,IAAI,SAAA+D,GAAA,IAAGgH,EAAShH,EAATgH,UAAW3L,EAAM2E,EAAN3E,OAAQ4L,EAAMjH,EAANiH,OAAM,OAC1ChN,EAAAC,EAAAC,cAAA,UAAQ1J,MAAOuW,GAAU,GAAApH,OAAKqH,EAAM,KAAArH,OAAIvE,QAIpDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAE,mBACjBjG,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVvL,KAAK,SACLyH,KAAK,WACL4Q,IAAK,EACLzD,aAAc,KAGtBxJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAE,cACjBjG,EAAAC,EAAAC,cAAA,SACItL,KAAK,SACLyH,KAAK,UACL8D,UAAU,eACVqJ,aAAc,EACdyD,IAAK,KAGbjN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAO+F,QAAQ,IAAE,UACjBjG,EAAAC,EAAAC,cAAA,SACItL,KAAK,SACLyH,KAAK,SACL8D,UAAU,eACVqJ,aAAc,GACdyD,IAAK,MAIjBjN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOtL,KAAK,SAASuL,UAAU,0BGvBnD2G,SAAU,kBACVyF,MAAO,iCAEX,CACInL,OAAQ,YACRiL,UAAWF,EACXG,WK1DiB,WAAM,IAAAlI,EACRjC,EAAS,oBAArB9M,EAAwCW,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAAhC,GA2Bf,OACIpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,gBAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgN,EAAc,CAACzG,QAhCpB,CACZ,CACIyC,OAAQ,IACRC,SAAU,eAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,UACRC,SAAU,kBAEd,CACID,OAAQ,cACRC,SAAU,eAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,UACRC,SAAU,YASoC1T,KAAMJ,EAASI,KAAMuR,cAAc,qBLyBrFF,SAAU,aACVyF,MAAO,mCAEX,CACInL,OAAQ,UACRiL,UAAWF,EACXG,WMhEe,WAAM,IAAAlI,EACOjC,EAAS,YAAW4J,EAAA/V,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA7C/O,EAAQ0W,EAAA,GAAEC,EAAWD,EAAA,GAgB5B,OACI/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsM,EAAiB,MAClBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,WAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgM,EAAO,CACJzF,QAvBR,CACZ,CACIyC,OAAQ,IACRC,SAAU,aAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,UACRC,SAAU,WAaM1T,KAAMJ,EAASI,KACfqR,SAAS,UACTE,cAAc,YACdJ,WAAY,GACZM,SAAU8E,SNmC9BlF,SAAU,WACVyF,MAAO,8BAEX,CACInL,OAAQ,OACRiL,UAAWF,EACXG,WAAYnI,EACZ2C,SAAU,QACVyF,MAAO,+BAEX,CACInL,OAAQ,OACRiL,UAAWF,EACXrF,SAAU,QACVyF,MAAO,2BACPD,WOlFY,WAAM,IAAAlI,EACPjC,EAAS,QAAjBgL,EAAwBnX,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAApB,GAEL3O,EAAO0X,EAAK1X,KAAO0X,EAAK1X,KAAO,GAIrC,OACIuK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAACkN,EAAS,CAAC3G,QATX,CAAC,IAAK,QAAS,OAAQ,YASMhR,KAAMA,4BCd1C4X,EAAc,WAAM,IAAA/O,EACOC,oBAAS,GAAMyC,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAA5CgP,EAAUtM,EAAA,GAAEuM,EAAavM,EAAA,GAAAuB,EACMhE,mBAAS,MAAKiE,EAAAxM,OAAA0I,EAAA,EAAA1I,CAAAuM,EAAA,GAA7CiL,EAAWhL,EAAA,GAAEiL,EAAcjL,EAAA,GAElCG,oBAAU,WAEN,IAAM+K,EAAY,SAAAzO,GAChBA,EAAEQ,iBACF8N,GAAc,GACdE,EAAexO,GACf1K,EAAO,UAIT,OAFAoZ,OAAOC,iBAAiB,sBAAuBF,GAExC,kBAAMC,OAAOE,oBAAoB,gBAAiBH,KACxD,IAUL,OAAKJ,EAGDtN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWyB,QAXT,SAAAkM,GAChBA,EAAIrO,iBAEC+N,GAELA,EAAYO,WAOR/N,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWsB,KAAK,MACzBzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,4BANY,MCpBf8N,EAAQ,WAAM,IAAA5J,EACRjC,EAAS,iCAAjB1M,EAAiDO,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA7C,GACP6J,EAAgB,GAChBxY,EAAKA,OACLwY,EAAgBnM,EAAcrM,EAAKA,KAAM,WAE7C,IAAMyY,EAAgB9B,EAAM+B,OAAO,SAAA5Y,GAA2B,IAAxB8W,EAAS9W,EAAT8W,UAAWjL,EAAM7L,EAAN6L,OAC7C,OAAOiL,IAAcF,GAAuB8B,EAAcG,SAAShN,EAAOc,iBAGxEmM,EAAqBjC,EAAM+B,OAAO,SAAArP,GAA2B,IAAxBuN,EAASvN,EAATuN,UAAWjL,EAAMtC,EAANsC,OAClD,OAAOiL,IAAcF,GAA4B8B,EAAcG,SAAShN,EAAOc,iBAG7EoM,EAAiBlC,EAAM+B,OAAO,SAAApI,GAA2B,IAAxBsG,EAAStG,EAATsG,UAAWjL,EAAM2E,EAAN3E,OAC9C,OAAOiL,IAAcF,GAAwB8B,EAAcG,SAAShN,EAAOmN,uBAGzEC,EAAepC,EAAM+B,OAAO,SAAAlF,GAA2B,IAAxBoD,EAASpD,EAAToD,UAAWjL,EAAM6H,EAAN7H,OAC5C,OAAOiL,IAAcF,GAAsB8B,EAAcG,SAAShN,EAAOmN,uBAQ7E,OACIvO,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iDACbH,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACC,GAAG,IAAIV,UAAU,cACnBH,EAAAC,EAAAC,cAAA,OACIuO,IAAKC,IACLC,IAAI,gBACJxO,UAAU,0BACV6D,MAAO,CACH4K,QAAS,MAGjB5O,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAA8B,kBAElDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MACIC,UAAU,wCACVqB,cAAY,WACZE,KAAK,OACLmN,iBAAe,SAEf7O,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,UAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACT,UAAU,WAAWU,GAAG,UAC1Bb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,qBAIRF,EAAAC,EAAAC,cAAC4O,EAAW,MACXN,EAAa9Z,OAASsL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcgM,GAA2B,GAC7EqC,EAAaxM,IAAI,SAAAsH,GAAA,IAAGlI,EAAMkI,EAANlI,OAAQ0F,EAAQwC,EAARxC,SAAUyF,EAAKjD,EAALiD,MAAK,OACxCvM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW7J,IAAK8K,GAC1BpB,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACT,UAAU,WAAWU,GAAIiG,GAC3B9G,EAAAC,EAAAC,cAAA,KAAGC,UAAS,YAAAwF,OAAc4G,KAC1BvM,EAAAC,EAAAC,cAAA,SAAIkB,OAKf8M,EAAcxZ,OAASsL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,YAAiB,GAClE+N,EAAclM,IAAI,SAAAuH,GAAA,IAAGnI,EAAMmI,EAANnI,OAAQ0F,EAAQyC,EAARzC,SAAUyF,EAAKhD,EAALgD,MAAK,OACzCvM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW7J,IAAK8K,GAC1BpB,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACT,UAAU,WAAWU,GAAIiG,GAC3B9G,EAAAC,EAAAC,cAAA,KAAGC,UAAS,YAAAwF,OAAc4G,KAC1BvM,EAAAC,EAAAC,cAAA,SAAIkB,OAIfkN,EAAe5Z,OAASsL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,gBAAkB,GAEpEmO,EAAetM,IAAI,SAAAyH,GAAA,IAAGrI,EAAMqI,EAANrI,OAAQ0F,EAAQ2C,EAAR3C,SAAUyF,EAAK9C,EAAL8C,MAAK,OAC1CvM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW7J,IAAK8K,GAC1BpB,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACT,UAAU,WAAWU,GAAIiG,GAC3B9G,EAAAC,EAAAC,cAAA,KAAGC,UAAS,YAAAwF,OAAc4G,KAC1BvM,EAAAC,EAAAC,cAAA,SAAIkB,OAIfiN,EAAmB3Z,OAASsL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAY,iBAAsB,GAE5EkO,EAAmBrM,IAAI,SAAA+M,GAAA,IAAG3N,EAAM2N,EAAN3N,OAAQ0F,EAAQiI,EAARjI,SAAUyF,EAAKwC,EAALxC,MAAK,OAC9CvM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW7J,IAAK8K,GAC1BpB,EAAAC,EAAAC,cAACU,EAAA,EAAI,CAACT,UAAU,WAAWU,GAAIiG,GAC3B9G,EAAAC,EAAAC,cAAA,KAAGC,UAAS,YAAAwF,OAAc4G,KAC1BvM,EAAAC,EAAAC,cAAA,SAAIkB,YClG3B4N,EAAS,WAClB,OACIhP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAM,uBAA+B,gCAEvDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,oBAAc,6BCRjB+O,GAAgB,CACzBC,YAAY,EACZC,QAAS,CACLC,OAAQ,CACJC,SAAU,OAEdC,MAAO,CACHC,SAAS,EACTC,KAAM,kCCFLC,GAAuB,SAAHla,GAgB3B,IAAA8V,EAAA9V,EAfF+V,cAAM,IAAAD,EAAG,6BAAsBA,EAAAqE,EAAAna,EAC/Boa,aAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAra,EACTsa,mBAAW,IAAAD,EAAG,kBAAcA,EAAAE,EAAAva,EAC5Bwa,mBAAW,IAAAD,EAAG,CACVE,QAAS,CACLzD,MAAO,uBACP0D,MAAO,oBAEXC,QAAS,CACL3D,MAAO,yBACP0D,MAAO,sBAEdH,EAAAK,EAAA5a,EACD6a,kBAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAA9a,EACf+a,cAAM,IAAAD,EAAG,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QAAOA,EAEzEE,KAAQC,SAASC,KAAeC,KAAaC,KAAYC,KAAOC,KAASC,MAEzE,IAAM1K,EAAOpQ,OAAA0K,EAAA,EAAA1K,CAAA,GACNiZ,GACAmB,GAGD3a,EAAO,CACT6a,SACAS,SAAU,CACN,CACIrL,MAAOqK,EAAYC,QAAQC,MAC3Bxa,KAAM6a,EAAOtO,IAAI,kBAAMgP,KAAMC,SAASC,OAAO,CAAEjE,IAAK,EAAGkE,IAAK,QAC5DC,gBAAiB,kBAErB,CACI1L,MAAOqK,EAAYG,QAAQD,MAC3Bxa,KAAM6a,EAAOtO,IAAI,kBAAMgP,KAAMC,SAASC,OAAO,CAAEjE,IAAK,EAAGkE,IAAK,QAC5DC,gBAAiB,oBAK7B,OACIpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcmL,KAGrCtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACTH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBwP,GACrC3P,EAAAC,EAAAC,cAAA,YAAO2P,KAGf7P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAIvBH,EAAAC,EAAAC,cAACmR,GAAA,EAAG,CAACC,SAAUlL,EAAS3Q,KAAMA,KAElCuK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAW4P,EAAYC,QAAQzD,MAAQ,UACzCwD,EAAYC,QAAQC,OAEzBjQ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAW4P,EAAYG,QAAQ3D,MAAQ,UACzCwD,EAAYG,QAAQD,WC7EhCsB,GAAoB,SAAHhc,GAA+C,IAAAic,EAAAjc,EAAzCgX,aAAK,IAAAiF,EAAG,GAAEA,EAAAC,EAAAlc,EAAE0a,aAAK,IAAAwB,EAAG,GAAEA,EAAAC,EAAAnc,EAAEoc,cAAM,IAAAD,EAAG,EAACA,EAClE,OACI1R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAWoM,KAElBvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB8P,GACjCjQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBwR,OCT1CC,GAAgB,SAAHrc,GAA+C,IAAAic,EAAAjc,EAAzCgX,aAAK,IAAAiF,EAAG,GAAEA,EAAAC,EAAAlc,EAAE0a,aAAK,IAAAwB,EAAG,GAAEA,EAAAC,EAAAnc,EAAEoc,cAAM,IAAAD,EAAG,EAACA,EAC9D,OACI1R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAWoM,KAElBvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB8P,GACjCjQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAiB,IAAGwR,EAAM,SCThDE,GAAgB,SAAHtc,GAA+C,IAAAic,EAAAjc,EAAzCgX,aAAK,IAAAiF,EAAG,GAAEA,EAAAC,EAAAlc,EAAE0a,aAAK,IAAAwB,EAAG,GAAEA,EAAAC,EAAAnc,EAAEoc,cAAM,IAAAD,EAAG,EAACA,EAC9D,OACI1R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAWoM,KAElBvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB8P,EAAK,KACtCjQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBwR,EAAM,SCThDG,GAAkB,SAAHvc,GAAoD,IAAA8V,EAAA9V,EAA9C+V,cAAM,IAAAD,EAAG,GAAEA,EAAA0G,EAAAxc,EAAEyc,gBAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAAA1c,EAAEmT,YAAI,IAAAuJ,EAAG,CAAC,IAAGA,EACrE,OACIjS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcmL,IAGjCtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACK8R,EAAShQ,IAAI,SAACqI,EAAS/T,GACpB,OAAO0J,EAAAC,EAAAC,cAAA,MAAI5J,IAAKA,GAAM+T,OAIlCrK,EAAAC,EAAAC,cAAA,aACKwI,EAAK1G,IAAI,SAACgI,EAAKI,GACZ,OACIpK,EAAAC,EAAAC,cAAA,MAAI5J,IAAK,QAAU8T,GACdJ,EAAIhI,IAAI,SAACkQ,EAAU5b,GAChB,OAAO0J,EAAAC,EAAAC,cAAA,MAAI5J,IAAG,OAAAqP,OAASrP,IAAQ4b,aCrB1DC,GAAiB,SAAH5c,GAA+C,IAAAic,EAAAjc,EAAzCgX,aAAK,IAAAiF,EAAG,GAAEA,EAAAC,EAAAlc,EAAE0a,aAAK,IAAAwB,EAAG,GAAEA,EAAAC,EAAAnc,EAAEoc,cAAM,IAAAD,EAAG,EAACA,EAC/D,OACI1R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAWoM,KAElBvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB8P,GACjCjQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBwR,OCA1CS,GAAY,WAAM,IAAAhO,EACHjC,EAAS,mCAA1BkQ,EAA4Drc,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA/C,GAAAC,EACIlC,EAAS,mCAA1BmQ,EAA4Dtc,OAAA0I,EAAA,EAAA1I,CAAAqO,EAAA,GAA/C,GAAAkO,EACOpQ,EAAS,wBAA7BqQ,EAAoDxc,OAAA0I,EAAA,EAAA1I,CAAAuc,EAAA,GAApC,GAEjBE,EAAU,CACZC,SAAUjH,EAAsB4G,GAChCxF,SAAUpB,EAAsB6G,IAIhCK,EAAsBH,EAAiB/c,KAAKuM,IAAI,SAAC4Q,GAAQ,MAAK,CAC9DA,EAASC,QAAO,KAAAlN,OACXiN,EAASzH,UACdyH,EAASE,OACTF,EAASG,YACT3P,EAAWwP,EAAS1H,mBAGxB,OACIlL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8S,GAAa,CAACzG,MAAM,uBAAuB0D,MAAM,oBAAoB0B,OAAQc,EAAQC,WACtF1S,EAAAC,EAAAC,cAAC+S,GAAiB,CAAC1G,MAAM,mBAAmB0D,MAAM,oBAAoB0B,OAAQc,EAAQ5F,WACtF7M,EAAAC,EAAAC,cAACgT,GAAa,CAAC3G,MAAM,yBAAyB0D,MAAM,kBAAkB0B,OAAQ,MAC9E3R,EAAAC,EAAAC,cAACiT,GAAc,CAAC5G,MAAM,uBAAuB0D,MAAM,mBAAmB0B,OAAQ,MAE9E3R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACkT,GAAe,CACZ9H,OAAO,eACP0G,SApBe,CAAC,UAAW,QAAS,SAAU,cAAe,SAqB7DtJ,KAAMiK,KAGd3S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACmT,GAAoB,CACjB/H,OAAO,mCACPqE,MAAM,KACNE,YAAY,sBACZE,YAAa,CACTC,QAAS,CACLzD,MAAO,uBACP0D,MAAO,YAEXC,QAAS,CACL3D,MAAO,yBACP0D,MAAO,YAGfK,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,aCvDxEgD,GAAc,SAAH/d,GAAoC,IAAAiR,EAAAjR,EAA9BkR,eAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAAnR,EAAEE,YAAI,IAAAiR,EAAG,GAAEA,EAC3C2B,EAAgBC,mBAAS,CAAE7B,UAAShR,SAClC8S,EAAqEF,EAArEE,cAAeC,EAAsDH,EAAtDG,kBAAmBC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,WAC9D,OACI3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAAlK,OAAA0T,OAAA,CAAOvJ,UAAU,iCAAoCoI,KACjDvI,EAAAC,EAAAC,cAAA,aACKuI,EAAazG,IAAI,SAAC2H,GAAW,OAC1B3J,EAAAC,EAAAC,cAAA,KAAQyJ,EAAYC,sBACfD,EAAY9G,QAAQb,IAAI,SAAC6H,GAAM,OAC5B7J,EAAAC,EAAAC,cAAA,KAAQ2J,EAAOC,iBAAmBD,EAAOE,OAAO,iBAKhE/J,EAAAC,EAAAC,cAAA,QAAWsI,IACNE,EAAK1G,IAAI,SAACgI,EAAKI,GAGZ,OAFAzB,EAAWqB,GAGPhK,EAAAC,EAAAC,cAAA,KAAQ8J,EAAIC,cACPD,EAAIE,MAAMlI,IAAI,SAACmI,EAAMC,GAClB,IAAuDmJ,EAAzCpJ,EAAKH,IAAIE,MAAME,GAAOJ,IAAIM,SAASF,GACfP,OAA1B2J,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACZhJ,EAAQN,EAAK3T,MACnB,GAAIid,EAAO,CACP,IAAMC,EAAatQ,EAAWqH,GAC9B,OAAOzK,EAAAC,EAAAC,cAAA,UAAKwT,GAEhB,OAAIF,EAEIxT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAAA,OACIC,UAAS,OAAAwF,OACK,IAAV8E,EAAc,cAAgB,eAGlCzK,EAAAC,EAAAC,cAAA,KACIC,UAAS,YAAAwF,OACK,IAAV8E,EAAc,WAAa,YAO5CzK,EAAAC,EAAAC,cAAA,KAAQiK,EAAKU,eAAiBV,EAAKJ,OAAO,sCC5C/E4J,GAAYC,KAAYD,UACxBE,GAAaD,KAAYC,WACzBC,GAAcF,KAAYE,YAEnBC,GAAS,WAAM,IAChBzT,EAAO0T,cAAP1T,GAAE8D,EACSjC,EAAQ,oBAAAwD,OAAqBrF,IAAzCjL,EAA8CW,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAAtC,GACTqC,EAAU,CACZ,CACIyC,OAAQ,IACRC,SAAU,YAEd,CACID,OAAQ,qBACRC,SAAU,YAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,SACRC,SAAU,SACVqK,UAAU,GAEd,CACItK,OAAQ,gBACRC,SAAU,aACVsK,OAAO,IAIf,OACIzT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAa,SAEvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACyT,GAAS,CACNM,QAASjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAiB,oBACzC+T,SAAS,mBAETlU,EAAAC,EAAAC,cAAC2T,GAAU,CAACpe,KAAMJ,EAASI,KAAM4G,KAAK,yBACjCoK,EAAQzE,IAAI,SAAAzM,GAA0B,IAAvB4T,EAAQ5T,EAAR4T,SAAUD,EAAM3T,EAAN2T,OACtB,OAAOlJ,EAAAC,EAAAC,cAAC4T,GAAW,CAACpO,MAAOwD,EAAQ1S,MAAO2S,UAM9DnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACiU,GAAW,CAAC1N,QAASA,EAAShR,KAAMJ,EAASI,YCxCzD2e,GAAa,WAAM,IACpBtc,EAAY8G,qBAAWvK,GAAvByD,QACJrC,EAAO,GACX,GAAIqC,EAAS,KAAAsM,EACKjC,EAAS,iCACvB1M,EADuDO,OAAA0I,EAAA,EAAA1I,CAAAoO,EAAA,GAA7C,GAGd,IAAI6J,EAAgB,GAChBxY,EAAKA,OACLwY,EAAgBnM,EAAcrM,EAAKA,KAAM,WAE7C,IAAM4e,EAAkBjI,EAAM+B,OAAO,SAAA5Y,GAAA,IAAG6L,EAAM7L,EAAN6L,OAAM,OAAO6M,EAAcG,SAAShN,EAAOmN,uBACnF,OACIvO,EAAAC,EAAAC,cAACU,EAAA,EAAa,KACT9I,GAAWkI,EAAAC,EAAAC,cAACoU,EAAG,MACfxc,GAAWkI,EAAAC,EAAAC,cAACqU,EAAK,MAClBvU,EAAAC,EAAAC,cAAA,OAAKC,UAAWrI,EAAU,kBAAoB,cAC1CkI,EAAAC,EAAAC,cAACsU,EAAA,EAAM,KACD1c,EAMEkI,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,SAAQ,KACX9F,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIT,QAASjU,EAAAC,EAAAC,cAACyU,GAAS,QACxCN,EAAgBrS,IAAI,SAAAlD,EAA2B/C,GAAM,IAA9BuQ,EAAUxN,EAAVwN,WAAYxF,EAAQhI,EAARgI,SAChC,OAAO9G,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACE,KAAM5N,EAAUmN,QAASjU,EAAAC,EAAAC,cAACoM,EAAU,MAAKhW,IAAKyF,MAEhEiE,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACE,KAAK,UAAUT,QAASjU,EAAAC,EAAAC,cAAC0U,EAAI,SAVxC5U,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,SAAQ,KACX9F,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIT,QAASjU,EAAAC,EAAAC,cAAC2U,EAAK,QACrC7U,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACE,KAAK,YAAYT,QAASjU,EAAAC,EAAAC,cAAC4U,EAAQ,SAWlD9U,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACE,KAAK,eAAeT,QAASjU,EAAAC,EAAAC,cAAC6U,GAAM,QAC3C/U,EAAAC,EAAAC,cAACsU,EAAA,EAAK,CAACE,KAAK,IAAIT,QAASjU,EAAAC,EAAAC,cAACsU,EAAA,EAAQ,CAAC3T,GAAG,IAAImU,SAAO,QAGxDld,GAAWkI,EAAAC,EAAAC,cAAC+U,EAAM,MACnBjV,EAAAC,EAAAC,cAACgV,EAAK,QC/CLC,GAAM,WACf,IAAMxV,EAAQC,aAAaD,MAAKrB,EACFC,mBAASoB,GAAMqB,EAAAhL,OAAA0I,EAAA,EAAA1I,CAAAsI,EAAA,GAAtCxG,EAAOkJ,EAAA,GAAErC,EAAUqC,EAAA,GAC1B,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAC7L,EAAa+gB,SAAQ,CAAC5e,MAAO,CAAEsB,UAAS6G,eACrCqB,EAAAC,EAAAC,cAACmV,GAAU,SCFZC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCrhB,EAAA8K,EAAA,GAAApF,KAAA1F,EAAAshB,KAAA,WAAqB5b,KAAK,SAAAtE,GAAiD,IAA9CmgB,EAAMngB,EAANmgB,OAAQC,EAAMpgB,EAANogB,OAAQC,EAAMrgB,EAANqgB,OAAQC,EAAMtgB,EAANsgB,OAAQC,EAAOvgB,EAAPugB,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCKRQ,GAAcC,QACa,cAA7BrI,OAAOsI,SAASC,UAEiB,UAA7BvI,OAAOsI,SAASC,UAEhBvI,OAAOsI,SAASC,SAASC,MAAM,2DAoCvC,SAASC,GAAgBC,EAAO/R,GAC5BrB,UAAUqT,cACL9F,SAAS6F,GACTxc,KAAK,SAAC0c,GACHA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiB1c,QACbkJ,UAAUqT,cAAcM,YAIxBC,QAAQ9L,IACJ,iHAKAzG,GAAUA,EAAOwS,UACjBxS,EAAOwS,SAASP,KAMpBM,QAAQ9L,IAAI,sCAGRzG,GAAUA,EAAOyS,WACjBzS,EAAOyS,UAAUR,UAOxCrY,MAAM,SAACpJ,GACJ+hB,QAAQ/hB,MAAM,4CAA6CA,KCtFvE,IAAMkiB,GAAOC,IAASC,WAAWC,SAASC,eAAe,SACnDzX,GAAQC,aAAaD,MAE3BqX,GAAKjN,OACD/J,EAAAC,EAAAC,cAACF,EAAAC,EAAMoX,WAAU,KACbrX,EAAAC,EAAAC,cAAC7L,EAAa+gB,SAAQ,CAAC5e,MAAOmJ,IAC1BK,EAAAC,EAAAC,cAACoX,GAAG,SAQhBhC,KDDO,SAAkBhR,GACrB,GAA6C,kBAAmBrB,UAAW,CAGvE,GADkB,IAAIsU,IAAIC,4BAAwB7J,OAAOsI,SAASxU,MACpDgW,SAAW9J,OAAOsI,SAASwB,OAIrC,OAGJ9J,OAAOC,iBAAiB,OAAQ,WAC5B,IAAMyI,EAAK,GAAA1Q,OAAM6R,4BAAsB,sBAEnCzB,IA+DhB,SAAiCM,EAAO/R,GAEpCoT,MAAMrB,GACDxc,KAAK,SAACxE,GAEH,IAAMsiB,EAActiB,EAASwN,QAAQD,IAAI,gBAEjB,MAApBvN,EAASG,QACO,MAAfmiB,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C3U,UAAUqT,cAAcuB,MAAMhe,KAAK,SAAC0c,GAChCA,EAAauB,aAAaje,KAAK,WAC3B8T,OAAOsI,SAAS8B,aAKxB3B,GAAgBC,EAAO/R,KAG9BpG,MAAM,WACH2Y,QAAQ9L,IAAI,mEAnFRiN,CAAwB3B,EAAO/R,GAI/BrB,UAAUqT,cAAcuB,MAAMhe,KAAK,WAC/Bgd,QAAQ9L,IACJ,iHAKRqL,GAAgBC,EAAO/R,MCxBvCkM","file":"static/js/main.fe8adcc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoBlanco.89ecd26e.jpg\";","import { createContext } from 'react'\n\nexport const TokenContext = createContext()\n","import { toast } from 'react-toastify'\nexport const notify = (msg = 'Ha ocurrido un error', type = 'error') => {\n    if (type === 'error') {\n        toast.error(msg)\n    } else if (type === 'success') {\n        toast.success(msg)\n    }\n}\n","import axios from 'axios'\nimport { notify } from '../helpers/notify'\n\nexport const api = axios.create({\n    // baseURL: 'https://localhost:8000',\n    baseURL: 'https://pr-stamos-production.up.railway.app/',\n})\n\napi.interceptors.response.use(undefined, ({ response }) => {\n    let error = 'Error desconocido en el servidor'\n\n    if (!response) {\n        notify(error)\n        return {\n            status: 500,\n            data: [],\n        }\n    }\n    const { data, status } = response\n    if (response) error = data.message\n    // MOstrando batch\n    notify(error)\n    return { status, data: data.message }\n})\n","export const validarEmail = (email) => {\n    // eslint-disable-next-line\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n\n    return regex.test(email)\n}\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { api } from '../../api/axios'\nimport { validarEmail } from '../../helpers/validacion.helper'\nimport { TokenContext } from '../../hooks/useContextUser'\n\nexport const Login = () => {\n    const [, setUser] = useState({ email: true, pass: true })\n    const { setContext } = useContext(TokenContext)\n\n    const handleMail = ({ target }) => {\n        setUser((user) => ({\n            ...user,\n            correo: validarEmail(target.value),\n        }))\n    }\n\n    const handleForm = async (e) => {\n        e.preventDefault()\n        const { target } = e\n        const { elements } = target\n        const [correo, password] = elements\n        const { data } = await api.post('/usuario/autenticar', {\n            correo: correo.value,\n            password: password.value,\n        })\n\n        if (data.token) {\n            localStorage.setItem('token', data.token)\n            setContext(data.token)\n        }\n    }\n    return (\n        <div className=\"login-box\">\n            <div className=\"login-logo\">\n                <h3>Nombre empresa</h3>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-body login-card-body\">\n                    <p className=\"login-box-msg\">Inicia sesión para continuar</p>\n                    <form action=\"\" onSubmit={handleForm}>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"email\"\n                                name=\"correo\"\n                                id=\"correo\"\n                                placeholder=\"Correo electrónico\"\n                                onChange={handleMail}\n                                autoComplete=\"off\"\n                                className=\"form-control\"\n                            />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-envelope\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"password\" name=\"password\" id=\"pass\" placeholder=\"Contraseña\" className=\"form-control\" autoComplete=\"off\" />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-lock\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" value=\"Iniciar sesión\" className=\"btn btn-success w-100\" />\n                    </form>\n                    <br />\n                    <Link to=\"registro\" className=\"\">\n                        ¿No tienes una cuenta?\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { api } from '../../api/axios'\nimport { notify } from '../../helpers/notify'\nimport { validarEmail } from '../../helpers/validacion.helper'\nimport { TokenContext } from '../../hooks/useContextUser'\n\nexport const Registro = () => {\n    const { setContext } = useContext(TokenContext)\n    const [form, setForm] = useState({})\n\n    const handleForm = async (e) => {\n        e.preventDefault()\n        const { password, validate_password, correo, nombre } = form\n        if (password !== validate_password) return notify('Las contraseñas deben de coincidir')\n        if (!validarEmail(correo)) return notify('Correo electrónico inválido')\n\n        const response = await api.post('usuario/registrar', {\n            password,\n            correo,\n            nombre,\n        })\n\n        if (response.data) {\n            if (response.data.token) {\n                localStorage.setItem('token', response.data.token)\n                setContext(response.data.token)\n            }\n        }\n    }\n\n    const handleInput = ({ target }) => {\n        setForm((form) => ({\n            ...form,\n            [target.name]: target.value,\n        }))\n    }\n    return (\n        <div className=\"login-box\">\n            <div className=\"login-logo\">\n                <h3>Registro</h3>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-body login-card-body\">\n                    <p className=\"login-box-msg\">Regístrate para continuar</p>\n                    <form onSubmit={handleForm}>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Nombre completo\" name=\"nombre\" onChange={handleInput} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-user\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Correo electrónico\" onChange={handleInput} name=\"correo\" />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-envelope\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" className=\"form-control\" onChange={handleInput} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-lock\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"password\"\n                                name=\"validate_password\"\n                                placeholder=\"Validar contraseña\"\n                                className=\"form-control\"\n                                onChange={handleInput}\n                            />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fa-solid fa-lock\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" value=\"Registrarme\" className=\"btn w-100 btn-success\" />\n                    </form>\n                    <br />\n                    <Link to=\"/\">¿Ya tienes una cuenta?</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport const Error = () => {\n    return (\n        <div>\n            <ToastContainer />\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { TokenContext } from '../../hooks/useContextUser'\n\nexport const Nav = () => {\n    const { setContext } = useContext(TokenContext)\n\n    const logOut = () => {\n        localStorage.removeItem('token')\n        setContext(null)\n    }\n\n    return (\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            {/* Left navbar links */}\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <div className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\n                        <i className=\"fas fa-bars\" />\n                    </div>\n                </li>\n                <li className=\"nav-item d-none d-sm-inline-block\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        Inicio\n                    </Link>\n                </li>\n            </ul>\n            {/* Right navbar links */}\n            <ul className=\"navbar-nav ml-auto\">\n                {/* Messages Dropdown Menu */}\n                <li className=\"nav-item dropdown\">\n                    <div className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n                        <i className=\"far fa-circle-user\" />\n                    </div>\n                    <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n                        <div onClick={logOut} className=\"dropdown-item\">\n                            Cerrar sesión\n                        </div>\n                        <div className=\"dropdown-divider\" />\n                    </div>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n","export const objetoToArray = (obj, llave) => {\n    const lista = obj.map((el) => el[llave].toLowerCase())\n    return lista\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { api } from '../api/axios'\nimport { notify } from '../helpers/notify'\nimport { TokenContext } from './useContextUser'\n\nexport const useFetch = (url) => {\n    const { context, setContext } = useContext(TokenContext)\n    const [state, setState] = useState({\n        data: [],\n    })\n    const [change, setChange] = useState(false)\n    useEffect(() => {\n        api.get(url, {\n            headers: {\n                Authorization: 'Bearer ' + context,\n            },\n        })\n            .then((res) => {\n                if (res.status === 403) {\n                    setContext(null)\n                    return localStorage.removeItem('token')\n                }\n\n                setState(res.data)\n            })\n            .catch((err) => {\n                notify(err)\n            })\n    }, [change])\n\n    return [state, setChange]\n}\n","export const getUsrLang = () => navigator.language || navigator.userLanguage\n","import { getUsrLang } from './monitor.helper'\n\nexport const formatDate = (date) =>\n    new Date(date).toLocaleDateString(getUsrLang(), {\n        year: 'numeric',\n        day: 'numeric',\n        month: 'long',\n    })\n\nexport const formatMoney = (quantity, currency = 'GTQ') => {\n    const formater = new Intl.NumberFormat(getUsrLang(), {\n        style: 'currency',\n        currency,\n    })\n\n    return formater.format(quantity)\n}\n","import axios from 'axios'\nimport React, { useContext } from 'react'\nimport { useState } from 'react'\nimport { api } from '../../../api/axios'\nimport '../../../css/datalist.css'\nimport { formatMoney } from '../../../helpers/format.helper'\nimport { TokenContext } from '../../../hooks/useContextUser'\nimport { useFetch } from '../../../hooks/useFetch'\n\nexport const Caja = () => {\n    const { context, setContext } = useContext(TokenContext)\n    const [response] = useFetch('/clientes')\n    const [config] = useFetch('/config')\n\n    const [selected, setSelected] = useState('Seleccionar cliente')\n    const [activeBar, setActiveBar] = useState(false)\n    const [money, setMoney] = useState(0)\n\n    const [cutasUsuario, setCuotasUsuario] = useState(null)\n\n    let listaClientes = response.data ? response.data : []\n\n    let caja = { config_id: 1, caja: 0, moneda: 'GTQ' }\n\n    if (config.data) {\n        if (config.data[0]) {\n            caja = config.data[0]\n        }\n    }\n    const toggleSearchBar = () => {\n        setActiveBar((state) => !state)\n    }\n    const clickOption = ({ target }) => {\n        toggleSearchBar()\n        const [radio, label] = target.children\n        setSelected(`${radio.value} - ${label.innerHTML}`)\n    }\n\n    const handleMoneyForm = async (e) => {\n        e.preventDefault()\n        const res = await api.post(\n            `config/edit/1 `,\n            { caja: money },\n            {\n                headers: {\n                    Authorization: 'Bearer ' + context,\n                },\n            }\n        )\n\n        if (res.status === 200) {\n            caja.caja = money\n            setMoney(0)\n        }\n    }\n\n    const handleMoney = (e) => {\n        setMoney(e.target.value)\n    }\n\n    return (\n        <>\n            <div className=\"row p-1 w-100\">\n                <div className=\"col-12 p-4\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3>Caja</h3>\n                        </div>\n                        <form action=\"\" onSubmit={handleMoneyForm}>\n                            <div className=\"card-body\">\n                                <h4>Dinero en caja: {formatMoney(caja.caja, 'GTQ')}</h4>\n\n                                <div>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"transaction\"\n                                        value={money}\n                                        onChange={handleMoney}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                <input type=\"submit\" value=\"Guardar\" className=\"btn btn-info\" />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3>Pagos</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"rom-group col-4\">\n                                <div className=\"select-box\">\n                                    <div className={`options-container ${activeBar && 'active'}`}>\n                                        {listaClientes.map(({ cliente_id, nombre }) => {\n                                            return (\n                                                <div\n                                                    className=\"option\"\n                                                    onClick={clickOption}\n                                                    key={cliente_id}\n                                                >\n                                                    <input\n                                                        type=\"radio\"\n                                                        className=\"radio\"\n                                                        id={nombre}\n                                                        name=\"category\"\n                                                        value={cliente_id}\n                                                    />\n                                                    <label htmlFor={nombre}>{nombre}</label>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                    <div className=\"selected\" onClick={toggleSearchBar}>\n                                        {selected}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","export const getOptions = ({ message, data }, { id, selector }) => {\n    const options = []\n    if (data) {\n        data.map((el) => {\n            const opt = {\n                name: el[selector],\n                value: el[id],\n            }\n            options.push(opt)\n            return true\n        })\n    }\n    return options\n}\n","import React, { Fragment, useContext, useState } from 'react'\nimport { useTable } from 'react-table'\nimport { api } from '../../../api/axios'\nimport { notify } from '../../../helpers/notify'\nimport { TokenContext } from '../../../hooks/useContextUser'\nexport const BrTable = ({\n    columns = [],\n    data = [],\n    opcionales = [],\n    endpoint = '/',\n    identificador = 'id',\n    setFetch = () => {\n        notify('Ha ocurrido un error refrescando la tabla')\n        return\n    },\n} = {}) => {\n    const { context, setContext } = useContext(TokenContext)\n    const [editD, setEditD] = useState({})\n    const [add, setAdd] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [id, setId] = useState(null)\n    const config = {\n        headers: {\n            Authorization: 'Bearer ' + context,\n        },\n    }\n\n    const refrescarTabla = () => {\n        setFetch({ data: [] })\n    }\n\n    const handleDelete = async (endpoint, identificador) => {\n        const url = `/${endpoint}/${identificador}`\n\n        api.delete(url, config).then((res) => {\n            if (res.status === 403) {\n                setContext(null)\n                return localStorage.removeItem('token')\n            }\n            refrescarTabla()\n        })\n\n        refrescarTabla()\n    }\n\n    const handleAdd = () => {\n        setAdd(!add)\n        setEdit(false)\n    }\n\n    const handleEdit = () => {\n        setAdd(false)\n        setEdit(!edit)\n    }\n\n    const editar = async (id) => {\n        const url = `/${endpoint}/${id}`\n        const { data } = await api.get(url, config)\n        const response = await data.data\n        setEditD(response[0])\n        setId(response[0][identificador])\n        handleEdit()\n    }\n\n    const handleForm = (e) => {\n        e.preventDefault()\n        const formData = new FormData(e.target)\n        const dataArray = [...formData]\n        const data = Object.fromEntries(dataArray)\n        api.post(`/${endpoint}`, data, config).then((data) => {\n            if (data.status === 500 || data.status === 400) return\n\n            notify('Registro agregado con éxito', 'success')\n            refrescarTabla()\n            handleAdd()\n        })\n    }\n    const handleEditForm = (e) => {\n        e.preventDefault()\n        const url = `/${endpoint}/edit/${id}`\n        const formData = new FormData(e.target)\n        const dataArray = [...formData]\n        const data = Object.fromEntries(dataArray)\n        api.post(url, data, config)\n            .then((res) => {\n                if (res.status === 500) return ''\n                notify('Registro actualizado con éxito', 'success')\n                setEdit(false)\n                refrescarTabla()\n            })\n            .catch((err) => {\n                notify('Error ocurrido en el servidor')\n            })\n    }\n\n    const tableInstance = useTable({ columns, data })\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\n\n    return (\n        <>\n            {!add && !edit ? (\n                <div className=\"acn-btns\">\n                    <div onClick={handleAdd} className=\"acn btn btn-success\">\n                        <i className=\"fa-solid fa-plus\"></i>\n                    </div>\n                </div>\n            ) : add ? (\n                <div className=\"card card-success\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">Agregar</h3>\n                    </div>\n                    <form action={endpoint} onSubmit={handleForm}>\n                        <div className=\"card-body row\">\n                            {columns.map(({ Header, accessor, options, type, hide }, i) => {\n                                if (hide) return ''\n                                if (accessor !== identificador) {\n                                    if (options) {\n                                        return (\n                                            <div className=\"from-group col-4\" key={`coumna-${i}`}>\n                                                <label htmlFor=\"\">{Header}</label>\n                                                <select\n                                                    name={accessor}\n                                                    id=\"\"\n                                                    required\n                                                    className=\"form-control\"\n                                                >\n                                                    {options.map((el) => {\n                                                        return (\n                                                            <option value={el.value} key={`opcion-${i}`}>\n                                                                {el.name}\n                                                            </option>\n                                                        )\n                                                    })}\n                                                </select>\n                                            </div>\n                                        )\n                                    }\n                                    return (\n                                        <>\n                                            <div className=\"form-group col-4\">\n                                                <label htmlFor=\"\">{Header}</label>\n                                                <input\n                                                    name={accessor}\n                                                    type={type}\n                                                    placeholder={Header}\n                                                    required\n                                                    className=\"form-control\"\n                                                />\n                                            </div>\n                                        </>\n                                    )\n                                }\n\n                                return ''\n                            })}\n                            {opcionales.map(({ Header, accessor }, i) => {\n                                return (\n                                    <div className=\"form-group col-4\" key={i}>\n                                        <label htmlFor=\"\">{Header}</label>\n                                        <input\n                                            name={accessor}\n                                            placeholder={Header}\n                                            className=\"form-control\"\n                                            required\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                        <div className=\"card-footer\">\n                            <button type=\"submit\" className=\"btn btn-success\">\n                                Guardar\n                            </button>\n                            <div className=\"btn btn-danger ml-1\" onClick={handleAdd}>\n                                Cancelar\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            ) : (\n                <div className=\"card card-info\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">Editar</h3>\n                    </div>\n                    <form action={endpoint} onSubmit={handleEditForm}>\n                        <div className=\"card-body row\">\n                            {columns.map(({ Header, accessor, options, type, hide }, i) => {\n                                if (hide) return ''\n                                if (accessor !== identificador) {\n                                    if (options) {\n                                        return (\n                                            <div className=\"from-group col-4\" key={i}>\n                                                <label htmlFor=\"\">{Header}</label>\n                                                <select name={accessor} className=\"form-control\">\n                                                    {options.map((el) => {\n                                                        return (\n                                                            <option\n                                                                value={el.value}\n                                                                key={el.value}\n                                                                selected={\n                                                                    el.value === editD[accessor] && 'selected'\n                                                                }\n                                                            >\n                                                                {el.name && el.name}\n                                                            </option>\n                                                        )\n                                                    })}\n                                                </select>\n                                            </div>\n                                        )\n                                    }\n                                    return (\n                                        <>\n                                            <div className=\"form-group col-4\" key={i}>\n                                                <label htmlFor=\"\">{Header}</label>\n                                                <input\n                                                    name={accessor}\n                                                    type={type}\n                                                    placeholder={Header}\n                                                    required\n                                                    className=\"form-control\"\n                                                    defaultValue={editD[accessor]}\n                                                />\n                                            </div>\n                                        </>\n                                    )\n                                }\n\n                                return ''\n                            })}\n                            {opcionales.map(({ Header, accessor }, i) => {\n                                return (\n                                    <div className=\"form-group col-4\">\n                                        <label htmlFor=\"\" key={i}>\n                                            {Header}\n                                        </label>\n                                        <input\n                                            name={accessor}\n                                            placeholder={Header}\n                                            key={i}\n                                            className=\"form-control\"\n                                            required\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                        <div className=\"card-footer\">\n                            <button type=\"submit\" className=\"btn btn-info\">\n                                Guardar\n                            </button>\n                            <div className=\"btn btn-danger ml-1\" onClick={handleEdit}>\n                                Cancelar\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            )}\n            <div className=\"card-body table-responsive\">\n                <table className=\"table table-hover text-nowrap\" {...getTableProps()}>\n                    <thead>\n                        {headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                <th>Acción</th>\n                                {headerGroup.headers.map((column) => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map((cell, index) => {\n                                        const celda = cell.row.cells[index].row.allCells[index]\n                                        const columna = celda.column\n                                        const opciones = columna.options\n                                        const foranea = columna.foranea\n                                        let valor = ''\n                                        if (foranea) {\n                                            valor = opciones.find((opt) => `${opt.value}` === `${cell.value}`)\n                                            if (valor) valor = valor.name\n                                        }\n                                        if (index === 0) {\n                                            return (\n                                                <Fragment key={cell.render('Cell')}>\n                                                    <td className=\"action\">\n                                                        <div\n                                                            onClick={() =>\n                                                                editar(cell.row.original[identificador])\n                                                            }\n                                                            to={`${endpoint}/editar/${cell.row.original[identificador]}`}\n                                                            className=\"btn btn-success mr-1\"\n                                                        >\n                                                            <i className=\"fa-solid fa-pen\"></i>\n                                                        </div>\n                                                        <div\n                                                            onClick={() =>\n                                                                handleDelete(\n                                                                    endpoint,\n                                                                    cell.row.original[identificador]\n                                                                )\n                                                            }\n                                                            to={`${endpoint}/eliminar/${cell.row.original[identificador]}`}\n                                                            className=\"btn btn-danger\"\n                                                        >\n                                                            <i className=\"fa-solid fa-trash\"></i>\n                                                        </div>\n                                                    </td>\n                                                    <td {...cell.getCellProps()}>\n                                                        {foranea ? valor : cell.render('Cell')}\n                                                    </td>\n                                                </Fragment>\n                                            )\n                                        }\n                                        return (\n                                            <td {...cell.getCellProps()}>\n                                                {foranea ? valor : cell.render('Cell')}\n                                            </td>\n                                        )\n                                    })}\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { formatDate, formatMoney } from '../../../helpers/format.helper'\n\nexport const TablaLogs = ({ columns, data }) => {\n    return (\n        <div className=\"card-body table-responsive\">\n            <table className=\"table table-hover text-nowrap\">\n                <thead>\n                    <tr>\n                        {columns.map((column) => {\n                            return <th>{column}</th>\n                        })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((log) => {\n                        const tipo =\n                            log.tipo === 1\n                                ? 'Préstamo'\n                                : log.tipo == 2\n                                ? 'Pago cuota'\n                                : log.tipo === 3\n                                ? 'Retiro de caja'\n                                : 'Ingreso a caja'\n\n                        return (\n                            <tr key={log.log_id}>\n                                <td>{log.log_id}</td>\n                                <td>{formatDate(log.fecha_creacion)}</td>\n                                <td>\n                                    <span className={`badge bg-${log.tipo % 2 != 0 ? 'danger' : 'success'}`}>\n                                        {tipo}\n                                    </span>\n                                </td>\n                                <td>{formatMoney(log.cantidad)}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const AdvertenciaCambio = ({\n    titulo = 'Advertencia',\n    mensaje = 'Cualquier cambio en este sitio puede afectar directamente el funcionamiento de la página',\n}) => {\n    return (\n        <blockquote className=\"quote-danger mt-0\">\n            <h5 id=\"reminder\">{titulo}</h5>\n            <p>{mensaje}</p>\n        </blockquote>\n    )\n}\n","export const extraerTotalRegistros = (data) => {\n    const res = data.data ? (data.data[0] ? data.data[0].totalRegistros : 0) : 0\n\n    return res\n}\n\nexport const obtenerFormulario = ({ target }) => {\n    const formData = new FormData(target)\n    const dataArray = [...formData]\n    const data = Object.fromEntries(dataArray)\n    return data\n}\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { api } from '../../../api/axios'\nimport { obtenerFormulario } from '../../../helpers/extract'\nimport { notify } from '../../../helpers/notify'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { useFetchConfig } from '../../../hooks/useFetchConfig'\n\nexport const NuevoPrestamo = () => {\n    const navigate = useNavigate()\n    const config = useFetchConfig()\n    const handleForm = async (e) => {\n        e.preventDefault()\n        const formulario = obtenerFormulario(e)\n        api.post('/prestamos', formulario, config).then((res) => {\n            if (res.status !== 200) return null\n            notify('Préstamo almacenado con éxito', 'success')\n            navigate(`/prestamo/${res.data.data[0]}`)\n        })\n    }\n\n    const [monedas] = useFetch('/monedas')\n    const [clientes] = useFetch('/clientes')\n\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Nuevo préstamo</h3>\n                    <form onSubmit={handleForm}>\n                        <div className=\"card-body row\">\n                            <div className=\"form-group col-4\">\n                                <label htmlFor=\"\">Cliente</label>\n                                <select name=\"cliente_id\" id=\"\" className=\"form-control\" required>\n                                    {clientes.data.map(({ cliente_id, nombre, nit }) => (\n                                        <option value={cliente_id}>{nombre + '-' + nit}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"form-group col-4\">\n                                <label htmlFor=\"\">Moneda</label>\n                                <select name=\"moneda_id\" id=\"\" className=\"form-control\" required>\n                                    {monedas.data.map(({ moneda_id, nombre, prefix }) => (\n                                        <option value={moneda_id}>{`${prefix}-${nombre}`}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"form-group col-4\">\n                                <label htmlFor=\"\">Monto a prestar</label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"number\"\n                                    name=\"cantidad\"\n                                    min={1}\n                                    defaultValue={1}\n                                />\n                            </div>\n                            <div className=\"form-group col-4\">\n                                <label htmlFor=\"\">Interés</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"interes\"\n                                    className=\"form-control\"\n                                    defaultValue={5}\n                                    min={1}\n                                />\n                            </div>\n                            <div className=\"form-group col-4\">\n                                <label htmlFor=\"\">Cuotas</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"cuotas\"\n                                    className=\"form-control\"\n                                    defaultValue={12}\n                                    min={1}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"card-footer\">\n                            <input type=\"submit\" className=\"btn btn-success\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTable } from 'react-table'\nexport const BrTableMostrar = ({ columns = [], data = [], identificador = 'id' }) => {\n    const tableInstance = useTable({ columns, data })\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\n    return (\n        <div className=\"card-body table-responsive\">\n            <table className=\"table table-hover text-nowrap\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            <th>Acción</th>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row, index) => {\n                        prepareRow(row)\n\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell, index) => {\n                                    return (\n                                        <>\n                                            {index === 0 ? (\n                                                <td className=\"action\">\n                                                    <Link\n                                                        className=\"btn btn-success mr-1\"\n                                                        to={`/prestamo/${cell.row.original[identificador]}`}\n                                                    >\n                                                        <i className=\"fa-solid fa-eye\"></i>\n                                                    </Link>\n                                                </td>\n                                            ) : null}\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        </>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\nimport { getOptions } from '../../../helpers/getOptions'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTable } from '../../common/base/BrTable'\n\nexport const Usuarios = () => {\n    const [response, setResponse] = useFetch('/usuarios')\n    const [roles] = useFetch('/roles')\n    const options = getOptions(roles, { id: 'rol_id', selector: 'nombre' })\n\n    const columns = [\n        {\n            Header: 'Id',\n            accessor: 'usuario_id',\n        },\n        {\n            Header: 'Nombre',\n            accessor: 'nombre',\n            type: 'text',\n        },\n        {\n            Header: 'Correo electrónico',\n            accessor: 'correo',\n            type: 'email',\n        },\n        {\n            Header: 'Rol',\n            accessor: 'rol',\n            options,\n            foranea: true,\n        },\n    ]\n\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Usuarios</h3>\n                    <div className=\"card-body\">\n                        <BrTable\n                            columns={columns}\n                            data={response.data}\n                            endpoint=\"usuarios\"\n                            identificador=\"usuario_id\"\n                            opcionales={[\n                                {\n                                    Header: 'Contraseña',\n                                    accessor: 'password',\n                                },\n                            ]}\n                            setFetch={setResponse}\n                        />\n                    </div>\n                    <div className=\"card-footer clearfix\">\n                        <ul className=\"pagination pagination-sm m-0 float-right\">\n                            <li className=\"page-item\">\n                                <a href=\"page-item\" className=\"page-link\">\n                                    «\n                                </a>\n                            </li>\n                            <li className=\"page-item\">\n                                <a href=\"page-item\" className=\"page-link\">\n                                    1\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { Caja } from '../components/mantenimientos/caja/Caja'\nimport { Clientes } from '../components/mantenimientos/clientes/Clientes'\nimport { Logs } from '../components/mantenimientos/logs/Logs'\nimport { Monedas } from '../components/mantenimientos/monedas/Monedas'\nimport { OpcionesMenu } from '../components/mantenimientos/opcionesMenu/OpcionesMenu'\nimport { NuevoPrestamo } from '../components/mantenimientos/prestamos/NuevoPrestamo'\nimport { Prestamos } from '../components/mantenimientos/prestamos/Prestamos'\nimport { Roles } from '../components/mantenimientos/roles/Roles'\nimport { Usuarios } from '../components/mantenimientos/usuarios/Usuarios'\n\nexport const categorias = {\n    personas: 'personas',\n    configuracion: 'configuracion',\n    prestamos: 'Economía',\n    gestion: 'Gestión',\n}\nexport const rutas = [\n    {\n        nombre: 'Usuarios',\n        categoria: categorias.personas,\n        Componente: Usuarios,\n        endpoint: '/usuarios',\n        icono: 'fa-solid fa-user-tie',\n    },\n    {\n        nombre: 'Clientes',\n        categoria: categorias.personas,\n        Componente: Clientes,\n        icono: 'fas fa-solid fa-user',\n        endpoint: '/clientes',\n    },\n    {\n        nombre: 'Opciones de Menú',\n        categoria: categorias.configuracion,\n        Componente: OpcionesMenu,\n        icono: 'fa-solid fa-sliders',\n        endpoint: 'opcionesMenu',\n    },\n    {\n        nombre: 'Roles',\n        categoria: categorias.configuracion,\n        Componente: Roles,\n        icono: 'fa-solid fa-people-arrows',\n        endpoint: '/roles',\n    },\n    {\n        nombre: 'Ajustes',\n        categoria: categorias.configuracion,\n        Componente: Usuarios,\n        endpoint: '/configuracion',\n        icono: 'fas fa-regular fa-gear',\n    },\n    {\n        nombre: 'Nuevo Préstamo',\n        categoria: categorias.prestamos,\n        Componente: NuevoPrestamo,\n        endpoint: '/nuevoPrestamos',\n        icono: 'fas fa-solid fa-cash-register',\n    },\n    {\n        nombre: 'Prestamos',\n        categoria: categorias.prestamos,\n        Componente: Prestamos,\n        endpoint: '/prestamos',\n        icono: 'fa-solid fa-hand-holding-dollar',\n    },\n    {\n        nombre: 'Monedas',\n        categoria: categorias.prestamos,\n        Componente: Monedas,\n        endpoint: '/monedas',\n        icono: 'fas fa-solid fa-money-bill',\n    },\n    {\n        nombre: 'Caja',\n        categoria: categorias.gestion,\n        Componente: Caja,\n        endpoint: '/caja',\n        icono: 'fas fa-solid fa-sack-dollar',\n    },\n    {\n        nombre: 'Logs',\n        categoria: categorias.gestion,\n        endpoint: '/logs',\n        icono: 'fa-solid fa-chart-simple',\n        Componente: Logs,\n    },\n]\n","import React from 'react'\nimport { getOptions } from '../../../helpers/getOptions'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTable } from '../../common/base/BrTable'\n\nexport const Clientes = () => {\n    const [response, setResponse] = useFetch('/clientes')\n    const [roles] = useFetch('/usuarios')\n    const options = getOptions(roles, { id: 'usuario_id', selector: 'nombre' })\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'cliente_id',\n        },\n        {\n            Header: 'Nombre',\n            accessor: 'nombre',\n        },\n        {\n            Header: 'Correo electrónico',\n            accessor: 'correo',\n        },\n        {\n            Header: 'Teléfono',\n            accessor: 'telefono',\n        },\n        {\n            Header: 'Nit',\n            accessor: 'nit',\n        },\n        {\n            Header: 'Fecha de nacimiento',\n            accessor: 'fecha_nacimiento',\n            type: 'date',\n        },\n        {\n            Header: 'Dirección',\n            accessor: 'direccion',\n        },\n        {\n            Header: 'No. Identificacion',\n            accessor: 'identificacion',\n        },\n        {\n            Header: 'Prestamista',\n            accessor: 'prestamista_id',\n            hide: true,\n            options,\n            foranea: true,\n        },\n    ]\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Clientes</h3>\n                    <div className=\"card-body\">\n                        <BrTable\n                            columns={columns}\n                            data={response.data}\n                            endpoint=\"clientes\"\n                            identificador=\"cliente_id\"\n                            opcionales={[]}\n                            setFetch={setResponse}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { getOptions } from '../../../helpers/getOptions'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTable } from '../../common/base/BrTable'\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\n\nexport const OpcionesMenu = () => {\n    const [response, setResponse] = useFetch('/opcionesMenu')\n    const [roles] = useFetch('/roles')\n    const options = getOptions(roles, { id: 'rol_id', selector: 'nombre' })\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'opcion_id',\n        },\n        {\n            Header: 'Nombre',\n            accessor: 'nombre',\n        },\n        {\n            Header: 'Rol',\n            accessor: 'rol_id',\n            options,\n            foranea: true,\n        },\n    ]\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <AdvertenciaCambio />\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Opciones de menú</h3>\n                    <div className=\"card-body\">\n                        <BrTable\n                            columns={columns}\n                            data={response.data}\n                            endpoint=\"opcionesMenu\"\n                            identificador=\"opcion_id\"\n                            opcionales={[]}\n                            setFetch={setResponse}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTable } from '../../common/base/BrTable'\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\n\nexport const Roles = () => {\n    const [response, setResponse] = useFetch('/roles')\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'rol_id',\n        },\n        {\n            Header: 'Nombre',\n            accessor: 'nombre',\n        },\n    ]\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <AdvertenciaCambio />\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Roles</h3>\n                    <div className=\"card-body\">\n                        <BrTable\n                            columns={columns}\n                            data={response.data}\n                            endpoint=\"roles\"\n                            identificador=\"rol_id\"\n                            opcionales={[]}\n                            setFetch={setResponse}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useContext } from 'react'\nimport { TokenContext } from './useContextUser'\n\nexport const useFetchConfig = () => {\n    const { context } = useContext(TokenContext)\n    return {\n        headers: {\n            Authorization: 'Bearer ' + context,\n        },\n    }\n}\n","import React from 'react'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTableMostrar } from '../../common/base/BrTableMostrar'\n\nexport const Prestamos = () => {\n    const [response] = useFetch('/prestamos/todos')\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'prestamo_id',\n        },\n        {\n            Header: 'Cantidad',\n            accessor: 'cantidad',\n        },\n        {\n            Header: 'Cliente',\n            accessor: 'nombre_cliente',\n        },\n        {\n            Header: 'Prestamista',\n            accessor: 'prestamista',\n        },\n        {\n            Header: 'Cuotas',\n            accessor: 'cuotas',\n        },\n        {\n            Header: 'Interes',\n            accessor: 'interes',\n        },\n    ]\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Préstamos</h3>\n                    <div className=\"card-body\">\n                        <BrTableMostrar columns={columns} data={response.data} identificador=\"prestamo_id\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { BrTable } from '../../common/base/BrTable'\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\n\nexport const Monedas = () => {\n    const [response, setResponse] = useFetch('/monedas')\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'moneda_id',\n        },\n        {\n            Header: 'Nombre',\n            accessor: 'nombre',\n        },\n        {\n            Header: 'Prefijo',\n            accessor: 'prefix'\n        }\n    ]\n\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <AdvertenciaCambio />\n                <div className=\"card\">\n                    <h3 className=\"card-header\">Monedas</h3>\n                    <div className=\"card-body\">\n                        <BrTable\n                            columns={columns}\n                            data={response.data}\n                            endpoint=\"monedas\"\n                            identificador=\"moneda_id\"\n                            opcionales={[]}\n                            setFetch={setResponse}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { TablaLogs } from './TablaLogs'\nexport const Logs = () => {\n    const [logs] = useFetch('logs')\n\n    const data = logs.data ? logs.data : []\n\n    const columns = ['#', 'Fecha', 'Tipo', 'Cantidad']\n\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h3>Logs</h3>\n                    </div>\n                    <TablaLogs columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport { notify } from '../../../helpers/notify'\n\nexport const InstalarPWA = () => {\n    const [soportaPWA, setSoportaPWA] = useState(false)\n    const [instalacion, setInstalacion] = useState(null)\n\n    useEffect(() => {\n        // console.log(\"Ejecutando useEffect\");\n        const manejador = e => {\n          e.preventDefault()\n          setSoportaPWA(true)\n          setInstalacion(e)\n          notify(\"Hello\")\n        };\n        window.addEventListener(\"beforeinstallprompt\", manejador)\n    \n        return () => window.removeEventListener(\"transitionend\", manejador)\n      }, [])\n\n    const instalarPwa = evt => {\n        evt.preventDefault()\n\n        if (!instalacion) return\n\n        instalacion.prompt()\n    }\n\n    if (!soportaPWA) return null\n\n    return (\n        <li className=\"nav-item\" onClick={instalarPwa}>\n            <a className=\"nav-link\" href=\"/#\">\n                <i className=\"nav-icon fas fa-solid fa-download\"></i>\n                <p>Descargar app</p>\n            </a>\n        </li>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { objetoToArray } from '../../helpers/objectoToArray'\nimport { useFetch } from '../../hooks/useFetch'\nimport { categorias, rutas } from '../../router/rutas'\nimport logo from './../../assets/logoBlanco.jpg'\nimport { InstalarPWA } from './base/InstalarPWA'\n\nexport const Aside = () => {\n    const [data] = useFetch('/opcionesMenu/obtenerOpciones')\n    let listaOpciones = []\n    if (data.data) {\n        listaOpciones = objetoToArray(data.data, 'nombre')\n    }\n    const rutasPersonas = rutas.filter(({ categoria, nombre }) => {\n        return categoria === categorias.personas && listaOpciones.includes(nombre.toLowerCase())\n    })\n\n    const rutasConfiguracion = rutas.filter(({ categoria, nombre }) => {\n        return categoria === categorias.configuracion && listaOpciones.includes(nombre.toLowerCase())\n    })\n\n    const rutasPrestamos = rutas.filter(({ categoria, nombre }) => {\n        return categoria === categorias.prestamos && listaOpciones.includes(nombre.toLocaleLowerCase())\n    })\n\n    const rutasGestion = rutas.filter(({ categoria, nombre }) => {\n        return categoria === categorias.gestion && listaOpciones.includes(nombre.toLocaleLowerCase())\n    })\n\n    // const install = (e) => {\n    //     e.preventDefault()\n    //     notify('Función no implementada.')\n    // }\n\n    return (\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n            <Link to=\"/\" className=\"brand-link\">\n                <img\n                    src={logo}\n                    alt=\"AdminLTE Logo\"\n                    className=\"brand-image elevation-3\"\n                    style={{\n                        opacity: 0.9,\n                    }}\n                />\n                <span className=\"brand-text font-weight-light\">Corpodine S.A</span>\n            </Link>\n            <div className=\"sidebar\">\n                <nav className=\"mt-2\">\n                    <ul\n                        className=\"nav nav-pills nav-sidebar flex-column\"\n                        data-widget=\"treeview\"\n                        role=\"menu\"\n                        data-accordion=\"false\"\n                    >\n                        <li className=\"nav-header\">Inicio</li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"Inicio\">\n                                <i className=\"nav-icon fas fa-solid fa-house\"></i>\n                                <p>Inicio</p>\n                            </Link>\n                        </li>\n\n                        <InstalarPWA />\n                        {rutasGestion.length ? <li className=\"nav-header\">{categorias.gestion}</li> : ''}\n                        {rutasGestion.map(({ nombre, endpoint, icono }) => (\n                            <li className=\"nav-item\" key={nombre}>\n                                <Link className=\"nav-link\" to={endpoint}>\n                                    <i className={`nav-icon ${icono}`}></i>\n                                    <p>{nombre}</p>\n                                </Link>\n                            </li>\n                        ))}\n\n                        {rutasPersonas.length ? <li className=\"nav-header\">Personas</li> : ''}\n                        {rutasPersonas.map(({ nombre, endpoint, icono }) => (\n                            <li className=\"nav-item\" key={nombre}>\n                                <Link className=\"nav-link\" to={endpoint}>\n                                    <i className={`nav-icon ${icono}`}></i>\n                                    <p>{nombre}</p>\n                                </Link>\n                            </li>\n                        ))}\n                        {rutasPrestamos.length ? <li className=\"nav-header\">Préstamos</li> : ''}\n\n                        {rutasPrestamos.map(({ nombre, endpoint, icono }) => (\n                            <li className=\"nav-item\" key={nombre}>\n                                <Link className=\"nav-link\" to={endpoint}>\n                                    <i className={`nav-icon ${icono}`}></i>\n                                    <p>{nombre}</p>\n                                </Link>\n                            </li>\n                        ))}\n                        {rutasConfiguracion.length ? <li className=\"nav-header\">Configuracion</li> : ''}\n\n                        {rutasConfiguracion.map(({ nombre, endpoint, icono }) => (\n                            <li className=\"nav-item\" key={nombre}>\n                                <Link className=\"nav-link\" to={endpoint}>\n                                    <i className={`nav-icon ${icono}`}></i>\n                                    <p>{nombre}</p>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n            </div>\n        </aside>\n    )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <footer className=\"main-footer\">\n            <strong className=\"mr-4\">Corpodine S.A. &copy;</strong>\n            Todos los derechos reservados\n            <div className=\"float-right d-none d-sm-inline-block\">\n                <b>Version</b> 1.0\n            </div>\n        </footer>\n    )\n}\n","export const barCharConfig = {\n    responsive: true,\n    plugins: {\n        legend: {\n            position: 'top',\n        },\n        title: {\n            display: true,\n            text: 'Chart.js Bar Chart',\n        },\n    },\n}\n","import React from 'react'\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\nimport { Bar } from 'react-chartjs-2'\nimport { barCharConfig } from '../../../misc/chars'\nimport { faker } from '@faker-js/faker'\n\nexport const BrGraficaComparativa = ({\n    titulo = 'Título de la gráfica',\n    total = 0,\n    tituloTotal = 'Título total',\n    indicadores = {\n        primero: {\n            icono: 'fa-solid fa-arrow-up',\n            texto: 'Primer indicador',\n        },\n        segundo: {\n            icono: 'fa-solid fa-arrow-down',\n            texto: 'Segundo indicador',\n        },\n    },\n    configProp = {},\n    labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n}) => {\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\n\n    const options = {\n        ...barCharConfig,\n        ...configProp,\n    }\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: indicadores.primero.texto,\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 100 })),\n                backgroundColor: 'rgb(40,167,69)',\n            },\n            {\n                label: indicadores.segundo.texto,\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 100 })),\n                backgroundColor: 'rgb(220,53,69)',\n            },\n        ],\n    }\n\n    return (\n        <div className=\"card w-100\">\n            <div className=\"card-header border-0\">\n                <div className=\"card-header border-0\">\n                    <div className=\"card-title\">{titulo}</div>\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"d-flex\">\n                    <p className=\"d-flex flex-column\">\n                        <span className=\"text-bold text-lg\">{total}</span>\n                        <span>{tituloTotal}</span>\n                    </p>\n                </div>\n                <div className=\"position-relative mb-4\">\n                    <div className=\"chartjs-size-monitor\">\n                        <div className=\"chartjs-size-monitor-expand\">\n                            <div className=\"\"></div>\n                        </div>\n                        <div className=\"chartjs-size-monitor-shrink\">\n                            <div className=\"\"></div>\n                        </div>\n                    </div>\n\n                    <Bar joptions={options} data={data} />\n                </div>\n                <div className=\"d-flex flex-row justify-content-end\">\n                    <span className=\"mr-2\">\n                        <i className={indicadores.primero.icono + ' mr-1'}></i>\n                        {indicadores.primero.texto}\n                    </span>\n                    <span>\n                        <i className={indicadores.segundo.icono + ' mr-1'}></i>\n                        {indicadores.segundo.texto}\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BrTarjetaAmarilla = ({ icono = '', texto = '', numero = 0 }) => {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3\">\n            <div className=\"info-box mb-3\">\n                <span className=\"info-box-icon bg-warning elevation-1\">\n                    <i className={icono}></i>\n                </span>\n                <div className=\"info-box-content\">\n                    <span className=\"info-box-text\">{texto}</span>\n                    <span className=\"info-box-number\">{numero}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BrTarjetaAzul = ({ icono = '', texto = '', numero = 0 }) => {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3\">\n            <div className=\"info-box\">\n                <span className=\"info-box-icon bg-info elevation-1\">\n                    <i className={icono}></i>\n                </span>\n                <div className=\"info-box-content\">\n                    <span className=\"info-box-text\">{texto}</span>\n                    <div className=\"info-box-number\"> {numero} </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BrTarjetaRoja = ({ icono = '', texto = '', numero = 0 }) => {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3\">\n            <div className=\"info-box mb-3\">\n                <span className=\"info-box-icon bg-danger elevation-1\">\n                    <i className={icono}></i>\n                </span>\n                <div className=\"info-box-content\">\n                    <span className=\"info-box-text\">{texto} </span>\n                    <span className=\"info-box-number\">{numero} </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BrTarjetaTablas = ({ titulo = '', columnas = [], rows = [[]] }) => {\n    return (\n        <div className=\"card w-100\">\n            <div className=\"card-header border-0\">\n                <div className=\"card-title\">{titulo}</div>\n            </div>\n\n            <div className=\"card-body table-responsive p0\">\n                <table className=\"table table-striped table-valign-middle\">\n                    <thead>\n                        <tr>\n                            {columnas.map((columna, key) => {\n                                return <th key={key}>{columna}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows.map((row, index) => {\n                            return (\n                                <tr key={'rows-' + index}>\n                                    {row.map((elemento, key) => {\n                                        return <td key={`row-${key}`}>{elemento}</td>\n                                    })}\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BrTarjetaVerde = ({ icono = '', texto = '', numero = 0 }) => {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3\">\n            <div className=\"info-box mb-3\">\n                <span className=\"info-box-icon bg-success elevation-1\">\n                    <i className={icono}></i>\n                </span>\n                <div className=\"info-box-content\">\n                    <span className=\"info-box-text\">{texto}</span>\n                    <span className=\"info-box-number\">{numero}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { extraerTotalRegistros } from '../../helpers/extract'\nimport { formatDate } from '../../helpers/format.helper'\nimport { useFetch } from '../../hooks/useFetch'\nimport { BrGraficaComparativa } from '../common/base/BrGraficaComparativa'\nimport { BrTarjetaAmarilla } from '../common/base/BrTarjetaAmarilla'\nimport { BrTarjetaAzul } from '../common/base/BrTarjetaAzul'\nimport { BrTarjetaRoja } from '../common/base/BrTarjetaRoja'\nimport { BrTarjetaTablas } from '../common/base/BrTarjetaTablas'\nimport { BrTarjetaVerde } from '../common/base/BrTarjetaVerde'\n\nexport const Dashboard = () => {\n    const [totalUsuarios] = useFetch('/usuarios/obtenerTotalRegistros')\n    const [totalClientes] = useFetch('/clientes/obtenerTotalRegistros')\n    const [ultimosPrestamos] = useFetch('/prestamos/recientes')\n\n    const conteos = {\n        usuarios: extraerTotalRegistros(totalUsuarios),\n        clientes: extraerTotalRegistros(totalClientes),\n    }\n    const columnasTablaPrestamos = ['Cliente', 'Monto', 'Cuotas', 'Prestamista', 'Fecha']\n\n    let filasTablaPrestamos = ultimosPrestamos.data.map((prestamo) => [\n        prestamo.cliente,\n        `Q.${prestamo.cantidad}`,\n        prestamo.cuotas,\n        prestamo.prestamista,\n        formatDate(prestamo.fecha_creacion),\n    ])\n\n    return (\n        <div className=\"row p-4 w-100\">\n            <BrTarjetaAzul icono=\"fa-solid fa-user-tie\" texto=\"Total de usuarios\" numero={conteos.usuarios} />\n            <BrTarjetaAmarilla icono=\"fa-solid fa-user\" texto=\"Total de clientes\" numero={conteos.clientes} />\n            <BrTarjetaRoja icono=\"fa-solid fa-arrow-down\" texto=\"Egresos del mes\" numero={100} />\n            <BrTarjetaVerde icono=\"fa-solid fa-arrow-up\" texto=\"Ingresos del mes\" numero={100} />\n\n            <div className=\"col-md-6\">\n                <BrTarjetaTablas\n                    titulo=\"Préstamos\"\n                    columnas={columnasTablaPrestamos}\n                    rows={filasTablaPrestamos}\n                />\n            </div>\n            <div className=\"col-md-6\">\n                <BrGraficaComparativa\n                    titulo=\"Gráfica de ingresos y egresos\"\n                    total=\"10\"\n                    tituloTotal=\"Movimientos del mes\"\n                    indicadores={{\n                        primero: {\n                            icono: 'fa-solid fa-arrow-up',\n                            texto: 'Ingresos',\n                        },\n                        segundo: {\n                            icono: 'fa-solid fa-arrow-down',\n                            texto: 'Egresos',\n                        },\n                    }}\n                    labels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useTable } from 'react-table'\nimport { formatDate } from '../../../helpers/format.helper'\n\nexport const TablaCuotas = ({ columns = [], data = [] }) => {\n    const tableInstance = useTable({ columns, data })\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\n    return (\n        <div className=\"card-body table responsive\">\n            <table className=\"table table-hover text-nowrap\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row, index) => {\n                        prepareRow(row)\n\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell, index) => {\n                                    const celda = cell.row.cells[index].row.allCells[index]\n                                    const { booleano, fecha } = celda.column\n                                    const valor = cell.value\n                                    if (fecha) {\n                                        const fecha_pago = formatDate(valor)\n                                        return <td>{fecha_pago}</td>\n                                    }\n                                    if (booleano) {\n                                        return (\n                                            <td className=\"action\">\n                                                <div\n                                                    className={`btn ${\n                                                        valor === 1 ? 'btn-success' : 'btn-danger'\n                                                    }`}\n                                                >\n                                                    <i\n                                                        className={`fa-solid ${\n                                                            valor === 1 ? 'fa-check' : 'fa-x'\n                                                        }`}\n                                                    ></i>\n                                                </div>\n                                            </td>\n                                        )\n                                    }\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetch } from '../../../hooks/useFetch'\nimport { TablaCuotas } from './TablaCuotas'\nimport ExportExcel from 'react-export-excel'\n\nconst ExcelFile = ExportExcel.ExcelFile\nconst ExcelSheet = ExportExcel.ExcelSheet\nconst ExcelColumn = ExportExcel.ExcelColumn\n\nexport const Cuotas = () => {\n    const { id } = useParams()\n    const [response] = useFetch(`/cuotas/prestamo/${id}`)\n    const columns = [\n        {\n            Header: '#',\n            accessor: 'cuota_id',\n        },\n        {\n            Header: 'Número de cuota',\n            accessor: 'no_cuota',\n        },\n        {\n            Header: 'Cantidad',\n            accessor: 'cantidad',\n        },\n        {\n            Header: 'Pagado',\n            accessor: 'pagado',\n            booleano: true,\n        },\n        {\n            Header: 'Fecha de pago',\n            accessor: 'fecha_pago',\n            fecha: true,\n        },\n    ]\n\n    return (\n        <div className=\"row p-1 w-100\">\n            <div className=\"col-12 p-4\">\n                <div className=\"card\">\n                    <h3 className=\"card-header\">\n                        Cuotas\n                        <div className=\"card-tools\">\n                            <ExcelFile\n                                element={<div className=\"btn btn-success\">Descargar cuotas</div>}\n                                filename=\"Datos de cuotas\"\n                            >\n                                <ExcelSheet data={response.data} name=\"Cuotas de préstamo\">\n                                    {columns.map(({ accessor, Header }) => {\n                                        return <ExcelColumn label={Header} value={accessor}></ExcelColumn>\n                                    })}\n                                </ExcelSheet>\n                            </ExcelFile>\n                        </div>\n                    </h3>\n                    <div className=\"card-body\">\n                        <TablaCuotas columns={columns} data={response.data} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\nimport { Login } from './../components/seguridad/Login'\nimport { Registro } from './../components/seguridad/Registro'\nimport { Error } from './../components/common/Error'\nimport { TokenContext } from '../hooks/useContextUser'\nimport { Nav } from '../components/common/Nav'\nimport { Aside } from '../components/common/Aside'\nimport { Footer } from '../components/common/Footer'\nimport { useFetch } from '../hooks/useFetch'\nimport { objetoToArray } from '../helpers/objectoToArray'\nimport { rutas } from './rutas'\nimport { Dashboard } from '../components/mantenimientos/Dashboard'\nimport { Cuotas } from '../components/mantenimientos/cuotas/Cuotas'\nimport { NuevoPrestamo } from '../components/mantenimientos/prestamos/NuevoPrestamo'\nimport { Caja } from '../components/mantenimientos/caja/Caja'\nimport { Logs } from '../components/mantenimientos/logs/Logs'\n\nexport const MainRouter = () => {\n    const { context } = useContext(TokenContext)\n    let data = []\n    if (context) {\n        const [res] = useFetch('/opcionesMenu/obtenerOpciones')\n        data = res\n    }\n    let listaOpciones = []\n    if (data.data) {\n        listaOpciones = objetoToArray(data.data, 'nombre')\n    }\n    const rutasAccesibles = rutas.filter(({ nombre }) => listaOpciones.includes(nombre.toLocaleLowerCase()))\n    return (\n        <BrowserRouter>\n            {context && <Nav />}\n            {context && <Aside />}\n            <div className={context ? 'content-wrapper' : 'login-page'}>\n                <Routes>\n                    {!context ? (\n                        <React.Fragment>\n                            <Route exact path=\"/\" element={<Login />} />\n                            <Route path=\"/registro\" element={<Registro />} />\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <Route exact path=\"/\" element={<Dashboard />}></Route>\n                            {rutasAccesibles.map(({ Componente, endpoint }, i) => {\n                                return <Route path={endpoint} element={<Componente />} key={i} />\n                            })}\n                            <Route path=\"/prueba\" element={<Caja />}></Route>\n                        </React.Fragment>\n                    )}\n                    <Route path=\"prestamo/:id\" element={<Cuotas />} />\n                    <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n                </Routes>\n            </div>\n            {context && <Footer />}\n            <Error />\n        </BrowserRouter>\n    )\n}\n","import React, { useState } from 'react'\n\nimport { TokenContext } from './hooks/useContextUser'\n\n// Styles\nimport './css/styles.css'\nimport { MainRouter } from './router/MainRouter'\n\nexport const App = () => {\n    const token = localStorage.token\n    const [context, setContext] = useState(token)\n    return (\n        <div className=\"wrapper\">\n            <TokenContext.Provider value={{ context, setContext }}>\n                <MainRouter />\n            </TokenContext.Provider>\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service  worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { App } from './App'\nimport { TokenContext } from './hooks/useContextUser'\nimport reportWebVitals from './reportWebVitals'\nimport { register } from './serviceWorker'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nconst token = localStorage.token\n\nroot.render(\n    <React.StrictMode>\n        <TokenContext.Provider value={token}>\n            <App />\n        </TokenContext.Provider>\n    </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n// Service worker\nregister()\n"],"sourceRoot":""}