{"version":3,"sources":["assets/logoBlanco.jpg","hooks/useContextUser.js","helpers/notify.js","api/axios.js","helpers/validacion.helper.js","components/seguridad/Login.js","components/seguridad/Registro.js","components/common/Error.js","components/common/Nav.js","helpers/objectoToArray.js","hooks/useFetch.js","helpers/getOptions.js","components/common/base/BrTable.js","components/common/general/AdvertenciaCambio.js","components/mantenimientos/usuarios/Usuarios.js","router/rutas.js","components/mantenimientos/clientes/Clientes.js","components/mantenimientos/opcionesMenu/OpcionesMenu.js","components/mantenimientos/roles/Roles.js","components/mantenimientos/monedas/Monedas.js","components/common/Aside.js","components/common/Footer.js","helpers/extract.js","helpers/fakeDataGenerator.js","misc/chars.js","components/common/base/BrGraficaComparativa.js","components/common/base/BrTarjetaAmarilla.js","components/common/base/BrTarjetaAzul.js","components/common/base/BrTarjetaRoja.js","components/common/base/BrTarjetaTablas.js","components/common/base/BrTarjetaVerde.js","components/mantenimientos/Dashboard.js","router/MainRouter.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TokenContext","createContext","notify","msg","arguments","length","undefined","type","toast","error","success","api","axios","create","baseURL","interceptors","response","use","_ref","data","status","message","validarEmail","email","test","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Login","_useState","useState","pass","setUser","slicedToArray","setContext","useContext","handleForm","_ref2","asyncToGenerator","_callee","e","target","elements","_elements","correo","password","_yield$api$post","_context","preventDefault","post","token","localStorage","setItem","_x","apply","react_default","a","createElement","className","action","onSubmit","id","placeholder","onChange","user","objectSpread","autoComplete","dist","to","Registro_regeneratorRuntime","Registro","_useState2","form","setForm","validate_password","nombre","handleInput","react_toastify_esm","Nav","data-widget","href","role","data-toggle","onClick","removeItem","objetoToArray","llave","map","el","toLowerCase","useFetch","url","_useContext","setState","_useState3","_useState4","change","setChange","useEffect","get","headers","Authorization","res","getOptions","selector","options","opt","BrTable_regeneratorRuntime","BrTable","_ref$columns","columns","_ref$data","_ref$opcionales","opcionales","_ref$endpoint","endpoint","_ref$identificador","identificador","_ref$setFetch","setFetch","editD","setEditD","add","setAdd","_useState5","_useState6","edit","setEdit","_useState7","_useState8","setId","config","refrescarTabla","handleDelete","concat","delete","_x2","handleAdd","handleEdit","editar","_ref3","_callee2","_yield$api$get","_context2","_x3","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Fragment","formData","FormData","dataArray","toConsumableArray","fromEntries","_ref4","Header","accessor","hide","htmlFor","required","_ref5","_ref6","selected","defaultValue","_ref7","assign","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","index","columna","allCells","opciones","foranea","valor","find","react","original","getCellProps","AdvertenciaCambio","_ref$titulo","titulo","_ref$mensaje","mensaje","Usuarios","_useFetch","_useFetch2","setResponse","_useFetch3","roles","BrTable_BrTable","categorias","rutas","categoria","Componente","icono","AdvertenciaCambio_AdvertenciaCambio","Aside","listaOpciones","rutasPersonas","filter","includes","rutasConfiguracion","rutasPrestamos","toLocaleLowerCase","src","logo","alt","style","opacity","data-accordion","Footer","extraerTotalRegistros","totalRegistros","randNumber","max","min","faker","datatype","number","randName","fullName","barCharConfig","responsive","plugins","legend","position","title","display","text","BrGraficaComparativa","_ref$total","total","_ref$tituloTotal","tituloTotal","_ref$indicadores","indicadores","primero","texto","segundo","_ref$configProp","configProp","_ref$labels","labels","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","datasets","label","backgroundColor","react_chartjs_2_dist","joptions","BrTarjetaAmarilla","_ref$icono","_ref$texto","_ref$numero","numero","BrTarjetaAzul","BrTarjetaRoja","BrTarjetaTablas","_ref$columnas","columnas","_ref$rows","elemento","BrTarjetaVerde","Dashboard","totalUsuarios","totalClientes","conteos","usuarios","clientes","filasTablaPrestamos","toFixed","BrTarjetaAzul_BrTarjetaAzul","BrTarjetaAmarilla_BrTarjetaAmarilla","BrTarjetaRoja_BrTarjetaRoja","BrTarjetaVerde_BrTarjetaVerde","BrTarjetaTablas_BrTarjetaTablas","BrGraficaComparativa_BrGraficaComparativa","MainRouter","rutasAccesibles","Nav_Nav","Aside_Aside","react_router_dist","exact","path","element","Dashboard_Dashboard","Login_Login","Registro_Registro","replace","Footer_Footer","Error_Error","App","Provider","MainRouter_MainRouter","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","root","ReactDOM","createRoot","document","getElementById","StrictMode","App_App","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e7b8b4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoBlanco.89ecd26e.jpg\";","import { createContext } from 'react'\r\n\r\nexport const TokenContext = createContext()\r\n","import { toast } from 'react-toastify'\r\nexport const notify = (msg = 'Ha ocurrido un error', type = 'error') => {\r\n    if (type === 'error') {\r\n        toast.error(msg)\r\n    } else if (type === 'success') {\r\n        toast.success(msg)\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport { notify } from '../helpers/notify'\r\n\r\nexport const api = axios.create({\r\n    baseURL: 'http://137.184.73.135:8000',\r\n})\r\n\r\napi.interceptors.response.use(undefined, ({ response }) => {\r\n    let error = 'Error desconocido en el servidor'\r\n    const { data, status } = response\r\n    if (response) error = data.message\r\n    // MOstrando batch\r\n    notify(error)\r\n    return { status, data: data.message }\r\n})\r\n","export const validarEmail = (email) => {\r\n    // eslint-disable-next-line\r\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n\r\n    return regex.test(email)\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { api } from '../../api/axios'\r\nimport { validarEmail } from '../../helpers/validacion.helper'\r\nimport { TokenContext } from '../../hooks/useContextUser'\r\n\r\nexport const Login = () => {\r\n    const [, setUser] = useState({ email: true, pass: true })\r\n    const { setContext } = useContext(TokenContext)\r\n\r\n    const handleMail = ({ target }) => {\r\n        setUser((user) => ({\r\n            ...user,\r\n            correo: validarEmail(target.value),\r\n        }))\r\n    }\r\n\r\n    const handleForm = async (e) => {\r\n        e.preventDefault()\r\n        const { target } = e\r\n        const { elements } = target\r\n        const [correo, password] = elements\r\n        const { data } = await api.post('/usuario/autenticar', {\r\n            correo: correo.value,\r\n            password: password.value,\r\n        })\r\n\r\n        if (data.token) {\r\n            localStorage.setItem('token', data.token)\r\n            setContext(data.token)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login-box\">\r\n            <div className=\"login-logo\">\r\n                <h3>Nombre empresa</h3>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body login-card-body\">\r\n                    <p className=\"login-box-msg\">Inicia sesión para continuar</p>\r\n                    <form action=\"\" onSubmit={handleForm}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"correo\"\r\n                                id=\"correo\"\r\n                                placeholder=\"Correo electrónico\"\r\n                                onChange={handleMail}\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-envelope\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"password\" name=\"password\" id=\"pass\" placeholder=\"Contraseña\" className=\"form-control\" autoComplete=\"off\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-lock\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Iniciar sesión\" className=\"btn btn-success w-100\" />\r\n                    </form>\r\n                    <br />\r\n                    <Link to=\"registro\" className=\"\">\r\n                        ¿No tienes una cuenta?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { api } from '../../api/axios'\r\nimport { notify } from '../../helpers/notify'\r\nimport { validarEmail } from '../../helpers/validacion.helper'\r\nimport { TokenContext } from '../../hooks/useContextUser'\r\n\r\nexport const Registro = () => {\r\n    const { setContext } = useContext(TokenContext)\r\n    const [form, setForm] = useState({})\r\n\r\n    const handleForm = async (e) => {\r\n        e.preventDefault()\r\n        const { password, validate_password, correo, nombre } = form\r\n        if (password !== validate_password) return notify('Las contraseñas deben de coincidir')\r\n        if (!validarEmail(correo)) return notify('Correo electrónico inválido')\r\n\r\n        const response = await api.post('usuario/registrar', {\r\n            password,\r\n            correo,\r\n            nombre,\r\n        })\r\n\r\n        if (response.data) {\r\n            if (response.data.token) {\r\n                localStorage.setItem('token', response.data.token)\r\n                setContext(response.data.token)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleInput = ({ target }) => {\r\n        setForm((form) => ({\r\n            ...form,\r\n            [target.name]: target.value,\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"login-box\">\r\n            <div className=\"login-logo\">\r\n                <h3>Registro</h3>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body login-card-body\">\r\n                    <p className=\"login-box-msg\">Regístrate para continuar</p>\r\n                    <form onSubmit={handleForm}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Nombre completo\" name=\"nombre\" onChange={handleInput} />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-user\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Correo electrónico\" onChange={handleInput} name=\"correo\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-envelope\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" className=\"form-control\" onChange={handleInput} />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-lock\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"validate_password\"\r\n                                placeholder=\"Validar contraseña\"\r\n                                className=\"form-control\"\r\n                                onChange={handleInput}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <span className=\"fa-solid fa-lock\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Registrarme\" className=\"btn w-100 btn-success\" />\r\n                    </form>\r\n                    <br />\r\n                    <Link to=\"/\">¿Ya tienes una cuenta?</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { TokenContext } from '../../hooks/useContextUser'\r\n\r\nexport const Nav = () => {\r\n    const { setContext } = useContext(TokenContext)\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('token')\r\n        setContext(null)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n            {/* Left navbar links */}\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <div className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n                        <i className=\"fas fa-bars\" />\r\n                    </div>\r\n                </li>\r\n                <li className=\"nav-item d-none d-sm-inline-block\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        Inicio\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            {/* Right navbar links */}\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                {/* Messages Dropdown Menu */}\r\n                <li className=\"nav-item dropdown\">\r\n                    <div className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\r\n                        <i className=\"far fa-circle-user\" />\r\n                    </div>\r\n                    <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                        <div onClick={logOut} className=\"dropdown-item\">\r\n                            Cerrar sesión\r\n                        </div>\r\n                        <div className=\"dropdown-divider\" />\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","export const objetoToArray = (obj, llave) => {\r\n    const lista = obj.map((el) => el[llave].toLowerCase())\r\n    return lista\r\n}\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport { api } from '../api/axios'\r\nimport { notify } from '../helpers/notify'\r\nimport { TokenContext } from './useContextUser'\r\n\r\nexport const useFetch = (url) => {\r\n    const { context, setContext } = useContext(TokenContext)\r\n    const [state, setState] = useState({})\r\n    const [change, setChange] = useState(false)\r\n    useEffect(() => {\r\n        api.get(url, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + context,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                if (res.status === 403) {\r\n                    setContext(null)\r\n                    return localStorage.removeItem('token')\r\n                }\r\n\r\n                setState(res.data)\r\n            })\r\n            .catch((err) => {\r\n                notify(err)\r\n            })\r\n    }, [change])\r\n\r\n    return [state, setChange]\r\n}\r\n","export const getOptions = ({ message, data }, { id, selector }) => {\r\n    const options = []\r\n    if (data) {\r\n        data.map((el) => {\r\n            const opt = {\r\n                name: el[selector],\r\n                value: el[id],\r\n            }\r\n            options.push(opt)\r\n            return true\r\n        })\r\n    }\r\n    return options\r\n}\r\n","import React, { Fragment, useContext, useState } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport { api } from '../../../api/axios'\r\nimport { notify } from '../../../helpers/notify'\r\nimport { TokenContext } from '../../../hooks/useContextUser'\r\nexport const BrTable = ({\r\n    columns = [],\r\n    data = [],\r\n    opcionales = [],\r\n    endpoint = '/',\r\n    identificador = 'id',\r\n    setFetch = () => {\r\n        notify('Ha ocurrido un error refrescando la tabla')\r\n        return\r\n    },\r\n} = {}) => {\r\n    const { context, setContext } = useContext(TokenContext)\r\n    const [editD, setEditD] = useState({})\r\n    const [add, setAdd] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n    const [id, setId] = useState(null)\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + context,\r\n        },\r\n    }\r\n\r\n    const refrescarTabla = () => {\r\n        setFetch({ data: [] })\r\n    }\r\n\r\n    const handleDelete = async (endpoint, identificador) => {\r\n        const url = `/${endpoint}/${identificador}`\r\n\r\n        api.delete(url, config).then((res) => {\r\n            if (res.status === 403) {\r\n                setContext(null)\r\n                return localStorage.removeItem('token')\r\n            }\r\n            refrescarTabla()\r\n        })\r\n\r\n        refrescarTabla()\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        setAdd(!add)\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setAdd(false)\r\n        setEdit(!edit)\r\n    }\r\n\r\n    const editar = async (id) => {\r\n        const url = `/${endpoint}/${id}`\r\n        const { data } = await api.get(url, config)\r\n        const response = await data.data\r\n        setEditD(response[0])\r\n        setId(response[0][identificador])\r\n        handleEdit()\r\n    }\r\n\r\n    const handleForm = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData(e.target)\r\n        const dataArray = [...formData]\r\n        const data = Object.fromEntries(dataArray)\r\n        api.post(`/${endpoint}`, data, config).then((data) => {\r\n            if (data.status === 500 || data.status === 400) return\r\n\r\n            notify('Registro agregado con éxito', 'success')\r\n            refrescarTabla()\r\n            handleAdd()\r\n        })\r\n    }\r\n    const handleEditForm = (e) => {\r\n        e.preventDefault()\r\n        const url = `/${endpoint}/edit/${id}`\r\n        const formData = new FormData(e.target)\r\n        const dataArray = [...formData]\r\n        const data = Object.fromEntries(dataArray)\r\n        api.post(url, data, config)\r\n            .then((res) => {\r\n                if (res.status === 500) return ''\r\n                notify('Registro actualizado con éxito', 'success')\r\n                setEdit(false)\r\n                refrescarTabla()\r\n            })\r\n            .catch((err) => {\r\n                notify('Error ocurrido en el servidor')\r\n            })\r\n    }\r\n\r\n    const tableInstance = useTable({ columns, data })\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\r\n\r\n    return (\r\n        <>\r\n            {!add && !edit ? (\r\n                <div className=\"acn-btns\">\r\n                    <div onClick={handleAdd} className=\"acn btn btn-success\">\r\n                        <i className=\"fa-solid fa-plus\"></i>\r\n                    </div>\r\n                </div>\r\n            ) : add ? (\r\n                <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Agregar</h3>\r\n                    </div>\r\n                    <form action={endpoint} onSubmit={handleForm}>\r\n                        <div className=\"card-body row\">\r\n                            {columns.map(({ Header, accessor, options, type, hide }, i) => {\r\n                                if (hide) return ''\r\n                                if (accessor !== identificador) {\r\n                                    if (options) {\r\n                                        return (\r\n                                            <div className=\"from-group col-4\" key={`coumna-${i}`}>\r\n                                                <label htmlFor=\"\">{Header}</label>\r\n                                                <select name={accessor} id=\"\" required className=\"form-control\">\r\n                                                    {options.map((el) => {\r\n                                                        return (\r\n                                                            <option value={el.value} key={`opcion-${i}`}>\r\n                                                                {el.name}\r\n                                                            </option>\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"form-group col-4\">\r\n                                                <label htmlFor=\"\">{Header}</label>\r\n                                                <input name={accessor} type={type} placeholder={Header} required className=\"form-control\" />\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n\r\n                                return ''\r\n                            })}\r\n                            {opcionales.map(({ Header, accessor }, i) => {\r\n                                return (\r\n                                    <div className=\"form-group col-4\" key={i}>\r\n                                        <label htmlFor=\"\">{Header}</label>\r\n                                        <input name={accessor} placeholder={Header} className=\"form-control\" required />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"card-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">\r\n                                Guardar\r\n                            </button>\r\n                            <div className=\"btn btn-danger ml-1\" onClick={handleAdd}>\r\n                                Cancelar\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card card-info\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Editar</h3>\r\n                    </div>\r\n                    <form action={endpoint} onSubmit={handleEditForm}>\r\n                        <div className=\"card-body row\">\r\n                            {columns.map(({ Header, accessor, options, type, hide }, i) => {\r\n                                if (hide) return ''\r\n                                if (accessor !== identificador) {\r\n                                    if (options) {\r\n                                        return (\r\n                                            <div className=\"from-group col-4\" key={i}>\r\n                                                <label htmlFor=\"\">{Header}</label>\r\n                                                <select name={accessor} className=\"form-control\">\r\n                                                    {options.map((el) => {\r\n                                                        return (\r\n                                                            <option\r\n                                                                value={el.value}\r\n                                                                key={el.value}\r\n                                                                selected={el.value === editD[accessor] && 'selected'}\r\n                                                            >\r\n                                                                {el.name && el.name}\r\n                                                            </option>\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"form-group col-4\" key={i}>\r\n                                                <label htmlFor=\"\">{Header}</label>\r\n                                                <input\r\n                                                    name={accessor}\r\n                                                    type={type}\r\n                                                    placeholder={Header}\r\n                                                    required\r\n                                                    className=\"form-control\"\r\n                                                    defaultValue={editD[accessor]}\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n\r\n                                return ''\r\n                            })}\r\n                            {opcionales.map(({ Header, accessor }, i) => {\r\n                                return (\r\n                                    <div className=\"form-group col-4\">\r\n                                        <label htmlFor=\"\" key={i}>\r\n                                            {Header}\r\n                                        </label>\r\n                                        <input name={accessor} placeholder={Header} key={i} className=\"form-control\" required />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"card-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-info\">\r\n                                Guardar\r\n                            </button>\r\n                            <div className=\"btn btn-danger ml-1\" onClick={handleEdit}>\r\n                                Cancelar\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            <div className=\"card-body table-responsive \">\r\n                <table className=\"table table-hover text-nowrap\" {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                <th>Acción</th>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map((row) => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map((cell, index) => {\r\n                                        const celda = cell.row.cells[index].row.allCells[index]\r\n                                        const columna = celda.column\r\n                                        const opciones = columna.options\r\n                                        const foranea = columna.foranea\r\n                                        let valor = ''\r\n                                        if (foranea) {\r\n                                            valor = opciones.find((opt) => `${opt.value}` === `${cell.value}`)\r\n                                            if (valor) valor = valor.name\r\n                                        }\r\n                                        if (index === 0) {\r\n                                            return (\r\n                                                <Fragment key={cell.render('Cell')}>\r\n                                                    <td className=\"action\">\r\n                                                        <div\r\n                                                            onClick={() => editar(cell.row.original[identificador])}\r\n                                                            to={`${endpoint}/editar/${cell.row.original[identificador]}`}\r\n                                                            className=\"btn btn-success mr-1\"\r\n                                                        >\r\n                                                            <i className=\"fa-solid fa-pen\"></i>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            onClick={() => handleDelete(endpoint, cell.row.original[identificador])}\r\n                                                            to={`${endpoint}/eliminar/${cell.row.original[identificador]}`}\r\n                                                            className=\"btn btn-danger\"\r\n                                                        >\r\n                                                            <i className=\"fa-solid fa-trash\"></i>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td {...cell.getCellProps()}>{foranea ? valor : cell.render('Cell')}</td>\r\n                                                </Fragment>\r\n                                            )\r\n                                        }\r\n                                        return <td {...cell.getCellProps()}>{foranea ? valor : cell.render('Cell')}</td>\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const AdvertenciaCambio = ({\r\n    titulo = 'Advertencia',\r\n    mensaje = 'Cualquier cambio en este sitio puede afectar directamente el funcionamiento de la página',\r\n}) => {\r\n    return (\r\n        <blockquote className=\"quote-danger mt-0\">\r\n            <h5 id=\"reminder\">{titulo}</h5>\r\n            <p>{mensaje}</p>\r\n        </blockquote>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getOptions } from '../../../helpers/getOptions'\r\nimport { useFetch } from '../../../hooks/useFetch'\r\nimport { BrTable } from '../../common/base/BrTable'\r\n\r\nexport const Usuarios = () => {\r\n    const [response, setResponse] = useFetch('/usuarios')\r\n    const [roles] = useFetch('/roles')\r\n    const options = getOptions(roles, { id: 'rol_id', selector: 'nombre' })\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Id',\r\n            accessor: 'usuario_id',\r\n        },\r\n        {\r\n            Header: 'Nombre',\r\n            accessor: 'nombre',\r\n            type: 'text',\r\n        },\r\n        {\r\n            Header: 'Correo electrónico',\r\n            accessor: 'correo',\r\n            type: 'email',\r\n        },\r\n        {\r\n            Header: 'Rol',\r\n            accessor: 'rol',\r\n            options,\r\n            foranea: true,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"row p-1 w-100\">\r\n            <div className=\"col-12 p-4\">\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Usuarios</h3>\r\n                    <div className=\"card-body\">\r\n                        <BrTable\r\n                            columns={columns}\r\n                            data={response.data}\r\n                            endpoint=\"usuarios\"\r\n                            identificador=\"usuario_id\"\r\n                            opcionales={[\r\n                                {\r\n                                    Header: 'Contraseña',\r\n                                    accessor: 'password',\r\n                                },\r\n                            ]}\r\n                            setFetch={setResponse}\r\n                        />\r\n                    </div>\r\n                    <div className=\"card-footer clearfix\">\r\n                        <ul className=\"pagination pagination-sm m-0 float-right\">\r\n                            <li className=\"page-item\">\r\n                                <a href=\"page-item\" className=\"page-link\">\r\n                                    «\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"page-item\">\r\n                                <a href=\"page-item\" className=\"page-link\">\r\n                                    1\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Clientes } from '../components/mantenimientos/clientes/Clientes'\r\nimport { Monedas } from '../components/mantenimientos/monedas/Monedas'\r\nimport { OpcionesMenu } from '../components/mantenimientos/opcionesMenu/OpcionesMenu'\r\nimport { Roles } from '../components/mantenimientos/roles/Roles'\r\nimport { Usuarios } from '../components/mantenimientos/usuarios/Usuarios'\r\n\r\nexport const categorias = {\r\n    personas: 'personas',\r\n    configuracion: 'configuracion',\r\n    prestamos: 'Economía',\r\n}\r\nexport const rutas = [\r\n    {\r\n        nombre: 'Usuarios',\r\n        categoria: categorias.personas,\r\n        Componente: Usuarios,\r\n        endpoint: '/usuarios',\r\n        icono: 'fa-solid fa-user-tie',\r\n    },\r\n    {\r\n        nombre: 'Clientes',\r\n        categoria: categorias.personas,\r\n        Componente: Clientes,\r\n        icono: 'fas fa-solid fa-user',\r\n        endpoint: '/clientes',\r\n    },\r\n    {\r\n        nombre: 'Opciones de Menú',\r\n        categoria: categorias.configuracion,\r\n        Componente: OpcionesMenu,\r\n        icono: 'fa-solid fa-sliders',\r\n        endpoint: 'opcionesMenu',\r\n    },\r\n    {\r\n        nombre: 'Roles',\r\n        categoria: categorias.configuracion,\r\n        Componente: Roles,\r\n        icono: 'fa-solid fa-people-arrows',\r\n        endpoint: '/roles',\r\n    },\r\n    {\r\n        nombre: 'Ajustes',\r\n        categoria: categorias.configuracion,\r\n        Componente: Usuarios,\r\n        endpoint: '/configuracion',\r\n        icono: 'fas fa-regular fa-gear',\r\n    },\r\n    {\r\n        nombre: 'Prestamos',\r\n        categoria: categorias.prestamos,\r\n        Componente: Usuarios,\r\n        endpoint: '/prestamos',\r\n        icono: 'fas fa-solid fa-money-check-dollar',\r\n    },\r\n    {\r\n        nombre: 'Monedas',\r\n        categoria: categorias.prestamos,\r\n        Componente: Monedas,\r\n        endpoint: '/monedas',\r\n        icono: 'fas fa-solid fa-money-bill',\r\n    },\r\n]","import React from 'react'\r\nimport { getOptions } from '../../../helpers/getOptions'\r\nimport { useFetch } from '../../../hooks/useFetch'\r\nimport { BrTable } from '../../common/base/BrTable'\r\n\r\nexport const Clientes = () => {\r\n    const [response, setResponse] = useFetch('/clientes')\r\n    const [roles] = useFetch('/usuarios')\r\n    const options = getOptions(roles, { id: 'usuario_id', selector: 'nombre' })\r\n    const columns = [\r\n        {\r\n            Header: '#',\r\n            accessor: 'cliente_id',\r\n        },\r\n        {\r\n            Header: 'Nombre',\r\n            accessor: 'nombre',\r\n        },\r\n        {\r\n            Header: 'Correo electrónico',\r\n            accessor: 'correo',\r\n        },\r\n        {\r\n            Header: 'Teléfono',\r\n            accessor: 'telefono',\r\n        },\r\n        {\r\n            Header: 'No. Identificacion',\r\n            accessor: 'identificacion',\r\n        },\r\n        {\r\n            Header: 'Prestamista',\r\n            accessor: 'prestamista_id',\r\n            hide: true,\r\n            options,\r\n            foranea: true,\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"row p-1 w-100\">\r\n            <div className=\"col-12 p-4\">\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Clientes</h3>\r\n                    <div className=\"card-body\">\r\n                        <BrTable\r\n                            columns={columns}\r\n                            data={response.data}\r\n                            endpoint=\"clientes\"\r\n                            identificador=\"cliente_id\"\r\n                            opcionales={[]}\r\n                            setFetch={setResponse}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getOptions } from '../../../helpers/getOptions'\r\nimport { useFetch } from '../../../hooks/useFetch'\r\nimport { BrTable } from '../../common/base/BrTable'\r\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\r\n\r\nexport const OpcionesMenu = () => {\r\n    const [response, setResponse] = useFetch('/opcionesMenu')\r\n    const [roles] = useFetch('/roles')\r\n    const options = getOptions(roles, { id: 'rol_id', selector: 'nombre' })\r\n    const columns = [\r\n        {\r\n            Header: '#',\r\n            accessor: 'opcion_id',\r\n        },\r\n        {\r\n            Header: 'Nombre',\r\n            accessor: 'nombre',\r\n        },\r\n        {\r\n            Header: 'Rol',\r\n            accessor: 'rol_id',\r\n            options,\r\n            foranea: true,\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"row p-1 w-100\">\r\n            <div className=\"col-12 p-4\">\r\n                <AdvertenciaCambio />\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Opciones de menú</h3>\r\n                    <div className=\"card-body\">\r\n                        <BrTable\r\n                            columns={columns}\r\n                            data={response.data}\r\n                            endpoint=\"opcionesMenu\"\r\n                            identificador=\"opcion_id\"\r\n                            opcionales={[]}\r\n                            setFetch={setResponse}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetch } from '../../../hooks/useFetch'\r\nimport { BrTable } from '../../common/base/BrTable'\r\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\r\n\r\nexport const Roles = () => {\r\n    const [response, setResponse] = useFetch('/roles')\r\n    const columns = [\r\n        {\r\n            Header: '#',\r\n            accessor: 'rol_id',\r\n        },\r\n        {\r\n            Header: 'Nombre',\r\n            accessor: 'nombre',\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"row p-1 w-100\">\r\n            <div className=\"col-12 p-4\">\r\n                <AdvertenciaCambio />\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Roles</h3>\r\n                    <div className=\"card-body\">\r\n                        <BrTable\r\n                            columns={columns}\r\n                            data={response.data}\r\n                            endpoint=\"roles\"\r\n                            identificador=\"rol_id\"\r\n                            opcionales={[]}\r\n                            setFetch={setResponse}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetch } from '../../../hooks/useFetch'\r\nimport { BrTable } from '../../common/base/BrTable'\r\nimport { AdvertenciaCambio } from '../../common/general/AdvertenciaCambio'\r\n\r\nexport const Monedas = () => {\r\n    const [response, setResponse] = useFetch('/monedas')\r\n    const columns = [\r\n        {\r\n            Header: '#',\r\n            accessor: 'moneda_id',\r\n        },\r\n        {\r\n            Header: 'Nombre',\r\n            accessor: 'nombre',\r\n        },\r\n        {\r\n            Header: 'Prefijo',\r\n            accessor: 'prefix'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"row p-1 w-100\">\r\n            <div className=\"col-12 p-4\">\r\n                <AdvertenciaCambio />\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Monedas</h3>\r\n                    <div className=\"card-body\">\r\n                        <BrTable\r\n                            columns={columns}\r\n                            data={response.data}\r\n                            endpoint=\"monedas\"\r\n                            identificador=\"moneda_id\"\r\n                            opcionales={[]}\r\n                            setFetch={setResponse}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { notify } from '../../helpers/notify'\r\nimport { objetoToArray } from '../../helpers/objectoToArray'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { categorias, rutas } from '../../router/rutas'\r\nimport logo from './../../assets/logoBlanco.jpg'\r\n\r\nexport const Aside = () => {\r\n    const [data] = useFetch('/opcionesMenu/obtenerOpciones')\r\n    let listaOpciones = []\r\n    if (data.data) {\r\n        listaOpciones = objetoToArray(data.data, 'nombre')\r\n    }\r\n    const rutasPersonas = rutas.filter(({ categoria, nombre }) => {\r\n        return categoria === categorias.personas && listaOpciones.includes(nombre.toLowerCase())\r\n    })\r\n\r\n    const rutasConfiguracion = rutas.filter(({ categoria, nombre }) => {\r\n        return categoria === categorias.configuracion && listaOpciones.includes(nombre.toLowerCase())\r\n    })\r\n\r\n    const rutasPrestamos = rutas.filter(({ categoria, nombre }) => {\r\n        return categoria === categorias.prestamos && listaOpciones.includes(nombre.toLocaleLowerCase())\r\n    })\r\n    const install = (e) => {\r\n        e.preventDefault()\r\n        notify('Función no implementada.')\r\n    }\r\n    return (\r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            <Link to=\"/\" className=\"brand-link\">\r\n                <img\r\n                    src={logo}\r\n                    alt=\"AdminLTE Logo\"\r\n                    className=\"brand-image elevation-3\"\r\n                    style={{\r\n                        opacity: 0.9,\r\n                    }}\r\n                />\r\n                <span className=\"brand-text font-weight-light\">Corpodine S.A</span>\r\n            </Link>\r\n            <div className=\"sidebar\">\r\n                <nav className=\"mt-2\">\r\n                    <ul\r\n                        className=\"nav nav-pills nav-sidebar flex-column\"\r\n                        data-widget=\"treeview\"\r\n                        role=\"menu\"\r\n                        data-accordion=\"false\"\r\n                    >\r\n                        <li className=\"nav-header\">Inicio</li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"Inicio\">\r\n                                <i className=\"nav-icon fas fa-solid fa-house\"></i>\r\n                                <p>Inicio</p>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\" onClick={install}>\r\n                            <a className=\"nav-link\" href=\"/#\">\r\n                                <i className=\"nav-icon fas fa-solid fa-download\"></i>\r\n                                <p>Descargar app</p>\r\n                            </a>\r\n                        </li>\r\n\r\n                        {rutasPersonas.length ? <li className=\"nav-header\">Personas</li> : ''}\r\n                        {rutasPersonas.map(({ nombre, endpoint, icono }) => (\r\n                            <li className=\"nav-item\" key={nombre}>\r\n                                <Link className=\"nav-link\" to={endpoint}>\r\n                                    <i className={`nav-icon ${icono}`}></i>\r\n                                    <p>{nombre}</p>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                        {rutasPrestamos.length ? <li className=\"nav-header\">Préstamos</li> : ''}\r\n\r\n                        {rutasPrestamos.map(({ nombre, endpoint, icono }) => (\r\n                            <li className=\"nav-item\" key={nombre}>\r\n                                <Link className=\"nav-link\" to={endpoint}>\r\n                                    <i className={`nav-icon ${icono}`}></i>\r\n                                    <p>{nombre}</p>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                        {rutasConfiguracion.length ? <li className=\"nav-header\">Configuracion</li> : ''}\r\n\r\n                        {rutasConfiguracion.map(({ nombre, endpoint, icono }) => (\r\n                            <li className=\"nav-item\" key={nombre}>\r\n                                <Link className=\"nav-link\" to={endpoint}>\r\n                                    <i className={`nav-icon ${icono}`}></i>\r\n                                    <p>{nombre}</p>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <strong className=\"mr-4\">Corpodine S.A. &copy;</strong>\r\n            Todos los derechos reservados\r\n            <div className=\"float-right d-none d-sm-inline-block\">\r\n                <b>Version</b> 1.0\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","export const extraerTotalRegistros = (data) => (data.data ? data.data[0].totalRegistros : 0)\r\n","import { faker } from '@faker-js/faker'\r\nexport const randNumber = (max = 100, min = 0) => faker.datatype.number({ min, max })\r\n\r\nexport const randName = () => faker.name.fullName()\r\n\r\nexport const randDate = () => `${randNumber(30, 1)}/${randNumber(12, 1)}`\r\n","export const barCharConfig = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart',\r\n        },\r\n    },\r\n}\r\n","import React from 'react'\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { barCharConfig } from '../../../misc/chars'\r\nimport { faker } from '@faker-js/faker'\r\n\r\nexport const BrGraficaComparativa = ({\r\n    titulo = 'Título de la gráfica',\r\n    total = 0,\r\n    tituloTotal = 'Título total',\r\n    indicadores = {\r\n        primero: {\r\n            icono: 'fa-solid fa-arrow-up',\r\n            texto: 'Primer indicador',\r\n        },\r\n        segundo: {\r\n            icono: 'fa-solid fa-arrow-down',\r\n            texto: 'Segundo indicador',\r\n        },\r\n    },\r\n    configProp = {},\r\n    labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n}) => {\r\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\n    const options = {\r\n        ...barCharConfig,\r\n        ...configProp,\r\n    }\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: indicadores.primero.texto,\r\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 100 })),\r\n                backgroundColor: 'rgb(40,167,69)',\r\n            },\r\n            {\r\n                label: indicadores.segundo.texto,\r\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 100 })),\r\n                backgroundColor: 'rgb(220,53,69)',\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <div className=\"card w-100\">\r\n            <div className=\"card-header border-0\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">{titulo}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"d-flex flex-column\">\r\n                        <span className=\"text-bold text-lg\">{total}</span>\r\n                        <span>{tituloTotal}</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"position-relative mb-4\">\r\n                    <div className=\"chartjs-size-monitor\">\r\n                        <div className=\"chartjs-size-monitor-expand\">\r\n                            <div className=\"\"></div>\r\n                        </div>\r\n                        <div className=\"chartjs-size-monitor-shrink\">\r\n                            <div className=\"\"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Bar joptions={options} data={data} />\r\n                </div>\r\n                <div className=\"d-flex flex-row justify-content-end\">\r\n                    <span className=\"mr-2\">\r\n                        <i className={indicadores.primero.icono + ' mr-1'}></i>\r\n                        {indicadores.primero.texto}\r\n                    </span>\r\n                    <span>\r\n                        <i className={indicadores.segundo.icono + ' mr-1'}></i>\r\n                        {indicadores.segundo.texto}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrTarjetaAmarilla = ({ icono = '', texto = '', numero = 0 }) => {\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-3\">\r\n            <div className=\"info-box mb-3\">\r\n                <span className=\"info-box-icon bg-warning elevation-1\">\r\n                    <i className={icono}></i>\r\n                </span>\r\n                <div className=\"info-box-content\">\r\n                    <span className=\"info-box-text\">{texto}</span>\r\n                    <span className=\"info-box-number\">{numero}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrTarjetaAzul = ({ icono = '', texto = '', numero = 0 }) => {\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-3\">\r\n            <div className=\"info-box\">\r\n                <span className=\"info-box-icon bg-info elevation-1\">\r\n                    <i className={icono}></i>\r\n                </span>\r\n                <div className=\"info-box-content\">\r\n                    <span className=\"info-box-text\">{texto}</span>\r\n                    <div className=\"info-box-number\"> {numero} </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrTarjetaRoja = ({ icono = '', texto = '', numero = 0 }) => {\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-3\">\r\n            <div className=\"info-box mb-3\">\r\n                <span className=\"info-box-icon bg-danger elevation-1\">\r\n                    <i className={icono}></i>\r\n                </span>\r\n                <div className=\"info-box-content\">\r\n                    <span className=\"info-box-text\">{texto} </span>\r\n                    <span className=\"info-box-number\">{numero} </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrTarjetaTablas = ({ titulo = '', columnas = [], rows = [[]] }) => {\r\n    return (\r\n        <div className=\"card w-100\">\r\n            <div className=\"card-header border-0\">\r\n                <div className=\"card-title\">{titulo}</div>\r\n            </div>\r\n\r\n            <div className=\"card-body table-responsive p0\">\r\n                <table className=\"table table-striped table-valign-middle\">\r\n                    <thead>\r\n                        <tr>\r\n                            {columnas.map((columna, key) => {\r\n                                return <th key={key}>{columna}</th>\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows.map((row, index) => {\r\n                            return (\r\n                                <tr key={'rows-' + index}>\r\n                                    {row.map((elemento, key) => {\r\n                                        return <td key={`row-${key}`}>{elemento}</td>\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrTarjetaVerde = ({ icono = '', texto = '', numero = 0 }) => {\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-3\">\r\n            <div className=\"info-box mb-3\">\r\n                <span className=\"info-box-icon bg-success elevation-1\">\r\n                    <i className={icono}></i>\r\n                </span>\r\n                <div className=\"info-box-content\">\r\n                    <span className=\"info-box-text\">{texto}</span>\r\n                    <span className=\"info-box-number\">{numero}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { extraerTotalRegistros } from '../../helpers/extract'\r\nimport { randDate, randName, randNumber } from '../../helpers/fakeDataGenerator'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { BrGraficaComparativa } from '../common/base/BrGraficaComparativa'\r\nimport { BrTarjetaAmarilla } from '../common/base/BrTarjetaAmarilla'\r\nimport { BrTarjetaAzul } from '../common/base/BrTarjetaAzul'\r\nimport { BrTarjetaRoja } from '../common/base/BrTarjetaRoja'\r\nimport { BrTarjetaTablas } from '../common/base/BrTarjetaTablas'\r\nimport { BrTarjetaVerde } from '../common/base/BrTarjetaVerde'\r\n\r\nexport const Dashboard = () => {\r\n    const [totalUsuarios] = useFetch('/usuarios/obtenerTotalRegistros')\r\n    const [totalClientes] = useFetch('/clientes/obtenerTotalRegistros')\r\n\r\n    const conteos = {\r\n        usuarios: extraerTotalRegistros(totalUsuarios),\r\n        clientes: extraerTotalRegistros(totalClientes),\r\n    }\r\n    const columnasTablaPrestamos = ['Cliente', 'Monto', 'Prestamista', 'Fecha']\r\n    const arr = [1, 2, 3, 4, 5, 5, 5, 5]\r\n\r\n    const filasTablaPrestamos = arr.map(() => [\r\n        randName(),\r\n        `Q.${randNumber().toFixed(2)}`,\r\n        randName(),\r\n        randDate(),\r\n    ])\r\n\r\n    return (\r\n        <div className=\"row p-4 w-100\">\r\n            <BrTarjetaAzul icono=\"fa-solid fa-user-tie\" texto=\"Total de usuarios\" numero={conteos.usuarios} />\r\n            <BrTarjetaAmarilla icono=\"fa-solid fa-user\" texto=\"Total de clientes\" numero={conteos.clientes} />\r\n            <BrTarjetaRoja icono=\"fa-solid fa-arrow-down\" texto=\"Egresos del mes\" numero={100} />\r\n            <BrTarjetaVerde icono=\"fa-solid fa-arrow-up\" texto=\"Ingresos del mes\" numero={100} />\r\n\r\n            <div className=\"col-md-6\">\r\n                <BrTarjetaTablas\r\n                    titulo=\"Préstamos\"\r\n                    columnas={columnasTablaPrestamos}\r\n                    rows={filasTablaPrestamos}\r\n                />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <BrGraficaComparativa\r\n                    titulo=\"Gráfica de ingresos y egresos\"\r\n                    total=\"10\"\r\n                    tituloTotal=\"Movimientos del mes\"\r\n                    indicadores={{\r\n                        primero: {\r\n                            icono: 'fa-solid fa-arrow-up',\r\n                            texto: 'Ingresos',\r\n                        },\r\n                        segundo: {\r\n                            icono: 'fa-solid fa-arrow-down',\r\n                            texto: 'Egresos',\r\n                        },\r\n                    }}\r\n                    labels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\r\nimport { Login } from './../components/seguridad/Login'\r\nimport { Registro } from './../components/seguridad/Registro'\r\nimport { Error } from './../components/common/Error'\r\nimport { TokenContext } from '../hooks/useContextUser'\r\nimport { Nav } from '../components/common/Nav'\r\nimport { Aside } from '../components/common/Aside'\r\nimport { Footer } from '../components/common/Footer'\r\nimport { useFetch } from '../hooks/useFetch'\r\nimport { objetoToArray } from '../helpers/objectoToArray'\r\nimport { rutas } from './rutas'\r\nimport { Dashboard } from '../components/mantenimientos/Dashboard'\r\n\r\nexport const MainRouter = () => {\r\n    const { context } = useContext(TokenContext)\r\n    const [data] = useFetch('/opcionesMenu/obtenerOpciones')\r\n    let listaOpciones = []\r\n    if (data.data) {\r\n        listaOpciones = objetoToArray(data.data, 'nombre')\r\n    }\r\n    const rutasAccesibles = rutas.filter(({ nombre }) => listaOpciones.includes(nombre.toLocaleLowerCase()))\r\n    return (\r\n        <BrowserRouter>\r\n            {context && <Nav />}\r\n            {context && <Aside />}\r\n            <div className={context ? 'content-wrapper' : 'login-page'}>\r\n                <Routes>\r\n                    {!context ? (\r\n                        <React.Fragment>\r\n                            <Route exact path=\"/\" element={<Login />} />\r\n                            <Route path=\"/registro\" element={<Registro />} />\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <Route exact path=\"/\" element={<Dashboard />}></Route>\r\n                            {rutasAccesibles.map(({ Componente, endpoint }, i) => {\r\n                                return <Route path={endpoint} element={<Componente />} key={i} />\r\n                            })}\r\n                        </React.Fragment>\r\n                    )}\r\n                    <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n                </Routes>\r\n            </div>\r\n            {context && <Footer />}\r\n            <Error />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { TokenContext } from './hooks/useContextUser'\r\n\r\n// Styles\r\nimport './css/styles.css'\r\nimport { MainRouter } from './router/MainRouter'\r\n\r\nexport const App = () => {\r\n    const token = localStorage.token\r\n    const [context, setContext] = useState(token)\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <TokenContext.Provider value={{ context, setContext }}>\r\n                <MainRouter />\r\n            </TokenContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit http://bit.ly/CRA-PWA')\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.')\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister()\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { App } from './App'\nimport { TokenContext } from './hooks/useContextUser'\nimport reportWebVitals from './reportWebVitals'\nimport { register } from './serviceWorker'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nconst token = localStorage.token\n\nroot.render(\n    <React.StrictMode>\n        <TokenContext.Provider value={token}>\n            <App />\n        </TokenContext.Provider>\n    </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n// Service worker\nregister()\n"],"sourceRoot":""}